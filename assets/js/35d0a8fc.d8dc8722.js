"use strict";(self.webpackChunkmy_website_with_docusaurus=self.webpackChunkmy_website_with_docusaurus||[]).push([[9814],{3905:(n,e,t)=>{t.d(e,{Zo:()=>u,kt:()=>p});var r=t(7294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},a=Object.keys(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var d=r.createContext({}),l=function(n){var e=r.useContext(d),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},u=function(n){var e=l(n.components);return r.createElement(d.Provider,{value:e},n.children)},c={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,a=n.originalType,d=n.parentName,u=s(n,["components","mdxType","originalType","parentName"]),m=l(t),p=i,x=m["".concat(d,".").concat(p)]||m[p]||c[p]||a;return t?r.createElement(x,o(o({ref:e},u),{},{components:t})):r.createElement(x,o({ref:e},u))}));function p(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var a=t.length,o=new Array(a);o[0]=m;var s={};for(var d in e)hasOwnProperty.call(e,d)&&(s[d]=e[d]);s.originalType=n,s.mdxType="string"==typeof n?n:i,o[1]=s;for(var l=2;l<a;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},135:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=t(7462),i=(t(7294),t(3905));const a={title:"2 Multi-Sig Wallet",author:"thurendous, Polymetis",date:"Otcober 30th, 2022",keywords:["solidity","multi-sig","wallet"],description:"solidity multi-sig wallet",tags:["advanced solidity","app","wallet","multi-sig"]},o=void 0,s={unversionedId:"SolidityAdvanced/Multi-SigWallet",id:"SolidityAdvanced/Multi-SigWallet",title:"2 Multi-Sig Wallet",description:"solidity multi-sig wallet",source:"@site/docs/SolidityAdvanced/2_Multi-SigWallet.md",sourceDirName:"SolidityAdvanced",slug:"/SolidityAdvanced/Multi-SigWallet",permalink:"/docs/SolidityAdvanced/Multi-SigWallet",draft:!1,editUrl:"https://github.com/thurendous/Omaeno-website/tree/master/docs/SolidityAdvanced/2_Multi-SigWallet.md",tags:[{label:"advanced solidity",permalink:"/docs/tags/advanced-solidity"},{label:"app",permalink:"/docs/tags/app"},{label:"wallet",permalink:"/docs/tags/wallet"},{label:"multi-sig",permalink:"/docs/tags/multi-sig"}],version:"current",sidebarPosition:2,frontMatter:{title:"2 Multi-Sig Wallet",author:"thurendous, Polymetis",date:"Otcober 30th, 2022",keywords:["solidity","multi-sig","wallet"],description:"solidity multi-sig wallet",tags:["advanced solidity","app","wallet","multi-sig"]},sidebar:"tutorialSidebar",previous:{title:"1 Ether Wallet",permalink:"/docs/SolidityAdvanced/EtherWallet"},next:{title:"3 ERC721",permalink:"/docs/SolidityAdvanced/ERC721"}},d={},l=[],u={toc:l};function c(n){let{components:e,...a}=n;return(0,i.kt)("wrapper",(0,r.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\u30de\u30eb\u30c1\u30b7\u30b0\u30a6\u30a9\u30ec\u30c3\u30c8\u3092\u4f5c\u308b\u3002"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u30a6\u30a9\u30ec\u30c3\u30c8\u306e owner \u304c\u3067\u304d\u308b\u3053\u3068\uff1a"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u63d0\u51fa\u3059\u308b"),(0,i.kt)("li",{parentName:"ul"},"\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u8a31\u53ef\u3042\u308b\u3044\u306f\u5374\u4e0b"),(0,i.kt)("li",{parentName:"ul"},"\u30de\u30eb\u30c1\u30b7\u30b0\u306e owner \u304c\u3060\u308c\u3067\u3082\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u5b9f\u884c\u304c\u3067\u304d\u308b"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u306e\u69cb\u9020\uff1a"),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("img",{src:t(3533).Z,width:"403",height:"794"})))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sol"},'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\ncontract MultiSigWallet {\n    // event\u95a2\u9023\n    event Deposit(address indexed sender, uint amount, uint balance);\n    event SubmitTransaction(\n        address indexed owner,\n        uint indexed txIndex,\n        address indexed to,\n        uint value,\n        bytes data\n    );\n    event ConfirmTransaction(address indexed owner, uint indexed txIndex);\n    event RevokeConfirmation(address indexed owner, uint indexed txIndex);\n    event ExecuteTransaction(address indexed owner, uint indexed txIndex);\n\n    // owner\u914d\u5217\n    address[] public owners;\n    // owner\u3067\u3042\u308b\u304b\u3092\u5224\u65ad\u3059\u308bmapping\n    mapping(address => bool) public isOwner;\n    // \u5fc5\u8981\u306a\u627f\u8a8d\u6570\u3001\u4f8b\uff1a3\u4eba\u306b2\u4eba\u306e\u627f\u8a8d\u304c\u5fc5\u8981\u306a\u5834\u5408\u306f2\u3068\u3059\u308b\n    uint public numConfirmationsRequired;\n\n    // \u767a\u884c\u3059\u308b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u60c5\u5831\n    struct Transaction {\n        address to;\n        uint value;\n        bytes data;\n        bool executed;\n        uint numConfirmations;\n    }\n\n    // \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306eindex => owner => bool\u306emapping\n    mapping(uint => mapping(address => bool)) public isConfirmed;\n\n    // transaction\u306b\u3088\u3063\u3066\u69cb\u6210\u3055\u308c\u305f\u914d\u5217\n    Transaction[] public transactions;\n\n    // owner\u306b\u9650\u5b9a\u3059\u308b\n    modifier onlyOwner() {\n        require(isOwner[msg.sender], "not owner");\n        _;\n    }\n\n    // \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u5b58\u5728\u3057\u3066\u3044\u308b\n    modifier txExists(uint _txIndex) {\n        require(_txIndex < transactions.length, "tx does not exist");\n        _;\n    }\n\n    // \u307e\u3060\u5b9f\u884c\u3055\u308c\u3066\u3044\u306a\u3044\n    modifier notExecuted(uint _txIndex) {\n        require(!transactions[_txIndex].executed, "tx already executed");\n        _;\n    }\n\n    // \u307e\u3060\u627f\u8a8d\u3055\u308c\u3066\u3044\u306a\u3044\n    modifier notConfirmed(uint _txIndex) {\n        require(!isConfirmed[_txIndex][msg.sender], "tx already confirmed");\n        _;\n    }\n\n    // \u30c7\u30d7\u30ed\u30a4\u6642\u306b\u5b9f\u884c\u3055\u308c\u308b\u3082\u306e\n    constructor(address[] memory _owners, uint _numConfirmationsRequired) {\n        require(_owners.length > 0, "owners required");\n        require(\n            _numConfirmationsRequired > 0 &&\n                _numConfirmationsRequired <= _owners.length,\n            "invalid number of required confirmations"\n        );\n\n        // \u5f15\u6570\u306e_owners\u914d\u5217\u306b\u3042\u308bowner\u3092loop\u3057\u3066\u3001\u305d\u308c\u305e\u308cisOwner\u3092true\u306b\u3057\u3001owners\u914d\u5217\u306b\u7a81\u3063\u8fbc\u3080\n        for (uint i = 0; i < _owners.length; i++) {\n            address owner = _owners[i];\n\n            require(owner != address(0), "invalid owner");\n            require(!isOwner[owner], "owner not unique");\n\n            isOwner[owner] = true;\n            owners.push(owner);\n        }\n\n        numConfirmationsRequired = _numConfirmationsRequired;\n    }\n\n    // ether\u3092\u53d7\u3051\u53d6\u308b\u305f\u3081\n    receive() external payable {\n        emit Deposit(msg.sender, msg.value, address(this).balance);\n    }\n\n    // \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u63d0\u6848\n    function submitTransaction(\n        address _to,\n        uint _value,\n        bytes memory _data\n    ) public onlyOwner {\n        uint txIndex = transactions.length;\n\n        transactions.push(\n            Transaction({\n                to: _to,\n                value: _value,\n                data: _data,\n                executed: false,\n                numConfirmations: 0\n            })\n        );\n\n        emit SubmitTransaction(msg.sender, txIndex, _to, _value, _data);\n    }\n\n    // \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u627f\u8a8d\n    function confirmTransaction(uint _txIndex)\n        public\n        onlyOwner\n        txExists(_txIndex)\n        notExecuted(_txIndex)\n        notConfirmed(_txIndex)\n    {\n        Transaction storage transaction = transactions[_txIndex];\n        transaction.numConfirmations += 1;\n        isConfirmed[_txIndex][msg.sender] = true;\n\n        emit ConfirmTransaction(msg.sender, _txIndex);\n    }\n\n    // \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\uff08owner\u306a\u3089\u8ab0\u3067\u3082\u3067\u304d\u308b\uff09\n    function executeTransaction(uint _txIndex)\n        public\n        onlyOwner\n        txExists(_txIndex)\n        notExecuted(_txIndex)\n    {\n        Transaction storage transaction = transactions[_txIndex];\n\n        require(\n            transaction.numConfirmations >= numConfirmationsRequired,\n            "cannot execute tx"\n        );\n\n        transaction.executed = true;\n\n        (bool success, ) = transaction.to.call{value: transaction.value}(\n            transaction.data\n        );\n        require(success, "tx failed");\n\n        emit ExecuteTransaction(msg.sender, _txIndex);\n    }\n\n    // \u81ea\u5206\u304c\u3059\u3067\u306b\u627f\u8a8d\u3057\u305f\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u627f\u8a8d\u3092\u53d6\u308a\u6d88\u3059\n    function revokeConfirmation(uint _txIndex)\n        public\n        onlyOwner\n        txExists(_txIndex)\n        notExecuted(_txIndex)\n    {\n        Transaction storage transaction = transactions[_txIndex];\n\n        require(isConfirmed[_txIndex][msg.sender], "tx not confirmed");\n\n        transaction.numConfirmations -= 1;\n        isConfirmed[_txIndex][msg.sender] = false;\n\n        emit RevokeConfirmation(msg.sender, _txIndex);\n    }\n\n    // owners\u3092\u8fd4\u3059\n    function getOwners() public view returns (address[] memory) {\n        return owners;\n    }\n\n    // \u5c65\u6b74\u306b\u3042\u308b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u6570\u3092\u8fd4\u3059\n    function getTransactionCount() public view returns (uint) {\n        return transactions.length;\n    }\n\n    // \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u4e2d\u8eab\u3092\u8fd4\u3059\n    function getTransaction(uint _txIndex)\n        public\n        view\n        returns (\n            address to,\n            uint value,\n            bytes memory data,\n            bool executed,\n            uint numConfirmations\n        )\n    {\n        Transaction storage transaction = transactions[_txIndex];\n\n        return (\n            transaction.to,\n            transaction.value,\n            transaction.data,\n            transaction.executed,\n            transaction.numConfirmations\n        );\n    }\n}\n')),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://remix.ethereum.org/"},"Remix"),"\u3067\u8a66\u3059"))}c.isMDXComponent=!0},3533:(n,e,t)=>{t.d(e,{Z:()=>r});const r=t.p+"assets/images/ScreenShot2022-10-30.11-67a72c7e701048f4cc363f9df08adc61.png"}}]);