"use strict";(self.webpackChunkmy_website_with_docusaurus=self.webpackChunkmy_website_with_docusaurus||[]).push([[7651],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),m=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=m(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=m(n),d=a,f=u["".concat(c,".").concat(d)]||u[d]||l[d]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var m=2;m<o;m++)i[m]=n[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6453:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>s,toc:()=>m});var r=n(7462),a=(n(7294),n(3905));const o={title:"23 Practice BuyMeACoffee",author:"thurendous, Polymetis",date:"August 19, 2022",keywords:["solidity","practice"],description:"solidity conditional statements and practise your solidity by creating an easy app",tags:["practice"]},i="Practice",s={unversionedId:"Learning/Practice_BuyMeACoffee",id:"Learning/Practice_BuyMeACoffee",title:"23 Practice BuyMeACoffee",description:"solidity conditional statements and practise your solidity by creating an easy app",source:"@site/docs/Learning/23_Practice_BuyMeACoffee.md",sourceDirName:"Learning",slug:"/Learning/Practice_BuyMeACoffee",permalink:"/docs/Learning/Practice_BuyMeACoffee",draft:!1,editUrl:"https://github.com/thurendous/Omaeno-website/tree/master/docs/Learning/23_Practice_BuyMeACoffee.md",tags:[{label:"practice",permalink:"/docs/tags/practice"}],version:"current",sidebarPosition:23,frontMatter:{title:"23 Practice BuyMeACoffee",author:"thurendous, Polymetis",date:"August 19, 2022",keywords:["solidity","practice"],description:"solidity conditional statements and practise your solidity by creating an easy app",tags:["practice"]},sidebar:"tutorialSidebar",previous:{title:"22 Inheritance",permalink:"/docs/Learning/inheritance"},next:{title:"24 Shadowing Inheritance",permalink:"/docs/Learning/shadowing_inheritance"}},c={},m=[{value:"\u30b3\u30f3\u30c8\u30e9\u30af\u30c8",id:"\u30b3\u30f3\u30c8\u30e9\u30af\u30c8",level:2}],p={toc:m};function l(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"practice"},"Practice"),(0,a.kt)("p",null,"\u5fa9\u7fd2\u3082\u517c\u306d\u3066\u6b21\u306e\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u3092",(0,a.kt)("a",{parentName:"p",href:"https://remix.ethereum.org/"},"Remix"),"\u3067\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u904a\u3093\u3067\u307f\u3066\u304f\u3060\u3055\u3044",(0,a.kt)("br",{parentName:"p"}),"\n","payable \u306b\u3064\u3044\u3066\u306f\u5f8c\u306e\u7ae0\u3067\u8ff0\u3079\u307e\u3059\u3002"),(0,a.kt)("p",null,"\u53c2\u7167 URL\uff1a",(0,a.kt)("a",{parentName:"p",href:"https://docs.alchemy.com/docs/how-to-build-buy-me-a-coffee-defi-dapp"},"AlchemyTutorial")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://remix.ethereum.org/"},"Remix"),"\u3067\u904a\u3076"),(0,a.kt)("h2",{id:"\u30b3\u30f3\u30c8\u30e9\u30af\u30c8"},"\u30b3\u30f3\u30c8\u30e9\u30af\u30c8"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"//SPDX-License-Identifier: Unlicense\n\n// contracts/BuyMeACoffee.sol\npragma solidity ^0.8.0;\n\n// Switch this to your own contract address once deployed, for bookkeeping!\n// Example Contract Address on Goerli: 0xDBa03676a2fBb6711CB652beF5B7416A53c1421D\n\ncontract BuyMeACoffee {\n    // Event to emit when a Memo is created.\n    event NewMemo(\n        address indexed from,\n        uint256 timestamp,\n        string name,\n        string message\n    );\n\n    // Memo struct.\n    struct Memo {\n        address from;\n        uint256 timestamp;\n        string name;\n        string message;\n    }\n\n    // Address of contract deployer. Marked payable so that\n    // we can withdraw to this address later.\n    address payable owner;\n\n    // List of all memos received from coffee purchases.\n    Memo[] memos;\n\n    constructor() {\n        // Store the address of the deployer as a payable address.\n        // When we withdraw funds, we'll withdraw here.\n        owner = payable(msg.sender);\n    }\n\n    /**\n     * @dev fetches all stored memos\n     */\n    function getMemos() public view returns (Memo[] memory) {\n        return memos;\n    }\n\n    /**\n     * @dev buy a coffee for owner (sends an ETH tip and leaves a memo)\n     * @param _name name of the coffee purchaser\n     * @param _message a nice message from the purchaser\n     */\n    function buyCoffee(string memory _name, string memory _message) public payable {\n        // Must accept more than 0 ETH for a coffee.\n        require(msg.value > 0, \"can't buy coffee for free!\");\n\n        // Add the memo to storage!\n        memos.push(Memo(\n            msg.sender,\n            block.timestamp,\n            _name,\n            _message\n        ));\n\n        // Emit a NewMemo event with details about the memo.\n        emit NewMemo(\n            msg.sender,\n            block.timestamp,\n            _name,\n            _message\n        );\n    }\n\n    /**\n     * @dev send the entire balance stored in this contract to the owner\n     */\n    function withdrawTips() public {\n        require(owner.send(address(this).balance));\n    }\n}\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://remix.ethereum.org/"},"Remix"),"\u3067\u8a66\u3059"))}l.isMDXComponent=!0}}]);