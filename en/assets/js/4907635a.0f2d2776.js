"use strict";(self.webpackChunkmy_website_with_docusaurus=self.webpackChunkmy_website_with_docusaurus||[]).push([[8461],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>p});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),y=l(n),p=a,m=y["".concat(s,".").concat(p)]||y[p]||u[p]||o;return n?r.createElement(m,c(c({ref:t},d),{},{components:n})):r.createElement(m,c({ref:t},d))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=y;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var l=2;l<o;l++)c[l]=n[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},3443:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={title:"36 Try and Catch",author:"thurendous, Polymetis",date:"October 16th, 2022",keywords:["solidity","try","catch"],description:"understand try and chatch syntax through solidity code example",tags:["solidity","try","catch"]},c=void 0,i={unversionedId:"Learning/TryAndCatch copy",id:"Learning/TryAndCatch copy",title:"36 Try and Catch",description:"understand try and chatch syntax through solidity code example",source:"@site/docs/Learning/36_TryAndCatch copy.md",sourceDirName:"Learning",slug:"/Learning/TryAndCatch copy",permalink:"/en/docs/Learning/TryAndCatch copy",draft:!1,editUrl:"https://github.com/thurendous/Omaeno-website/tree/master/docs/Learning/36_TryAndCatch copy.md",tags:[{label:"solidity",permalink:"/en/docs/tags/solidity"},{label:"try",permalink:"/en/docs/tags/try"},{label:"catch",permalink:"/en/docs/tags/catch"}],version:"current",sidebarPosition:36,frontMatter:{title:"36 Try and Catch",author:"thurendous, Polymetis",date:"October 16th, 2022",keywords:["solidity","try","catch"],description:"understand try and chatch syntax through solidity code example",tags:["solidity","try","catch"]},sidebar:"tutorialSidebar",previous:{title:"35 Contract that Creates other Contract",permalink:"/en/docs/Learning/ContractThatCreatesOtherContracts.md"},next:{title:"37 Import",permalink:"/en/docs/Learning/Import"}},s={},l=[],d={toc:l};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"try / catch"),"\u6587\u306f\u5916\u90e8\u95a2\u6570\u306e\u30a8\u30e9\u30fc\u306e\u307f\u3092\u30ad\u30e3\u30c3\u30c1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sol"},'\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\n// try / catch\u3092\u4f7f\u3046\u305f\u3081\u306e\u5916\u90e8\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\ncontract Foo {\n    address public owner;\n\n    constructor(address _owner) {\n        require(_owner != address(0), "invalid address");\n        assert(_owner != 0x0000000000000000000000000000000000000001);\n        owner = _owner;\n    }\n\n    function myFunc(uint x) public pure returns (string memory) {\n        require(x != 0, "require failed");\n        return "my func was called";\n    }\n}\n\ncontract Bar {\n    event Log(string message);\n    event LogBytes(bytes data);\n\n    Foo public foo;\n\n    constructor() {\n        // This Foo contract is used for example of try catch with external call\n        foo = new Foo(msg.sender);\n    }\n\n    // try / catch \u3092\u4f7f\u3063\u3066\u5916\u90e8\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u3092\u547c\u3073\u51fa\u3059\n    // tryCatchExternalCall(0) => Log("external call failed")\n    // tryCatchExternalCall(1) => Log("my func was called")\n    function tryCatchExternalCall(uint _i) public {\n        try foo.myFunc(_i) returns (string memory result) {\n            emit Log(result);\n        } catch {\n            emit Log("external call failed");\n        }\n    }\n\n    // try / catch \u3092\u4f7f\u3063\u3066\u5916\u90e8\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u3092\u4f5c\u6210\n    // tryCatchNewContract(0x0000000000000000000000000000000000000000) => Log("invalid address")\n    // tryCatchNewContract(0x0000000000000000000000000000000000000001) => LogBytes("")\n    // tryCatchNewContract(0x0000000000000000000000000000000000000002) => Log("Foo created")\n    function tryCatchNewContract(address _owner) public {\n        try new Foo(_owner) returns (Foo foo) {\n            // you can use variable foo here\n            emit Log("Foo created");\n        } catch Error(string memory reason) {\n            // catch failing revert() and require()\n            emit Log(reason);\n        } catch (bytes memory reason) {\n            // catch failing assert()\n            emit LogBytes(reason);\n        }\n    }\n}\n\n')))}u.isMDXComponent=!0}}]);