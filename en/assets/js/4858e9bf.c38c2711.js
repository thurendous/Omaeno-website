"use strict";(self.webpackChunkmy_website_with_docusaurus=self.webpackChunkmy_website_with_docusaurus||[]).push([[7134],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>p});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),d=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},m=function(e){var n=d(e.components);return a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=d(t),p=r,f=c["".concat(s,".").concat(p)]||c[p]||u[p]||i;return t?a.createElement(f,o(o({ref:n},m),{},{components:t})):a.createElement(f,o({ref:n},m))}));function p(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=c;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var d=2;d<i;d++)o[d]=t[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},340:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var a=t(7462),r=(t(7294),t(3905));const i={slug:"what-is-ERC1155-with-code-explained",title:"ERC1155\u3068\u306f\u306a\u3093\u305e\u3084\uff08\u30b3\u30fc\u30c9\u89e3\u8aac\uff09",authors:["Thurendous","Polymetis"],blogDescription:"ERC1155\u3068\u306f\u306a\u3093\u305e\u3084",tags:["ERC1155","ERC721","NFT","FT","solidity"]},o=void 0,l={permalink:"/en/blog/what-is-ERC1155-with-code-explained",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/ERC1155/2022-12-25-about-private-var.md",source:"@site/blog/ERC1155/2022-12-25-about-private-var.md",title:"ERC1155\u3068\u306f\u306a\u3093\u305e\u3084\uff08\u30b3\u30fc\u30c9\u89e3\u8aac\uff09",description:"BYAC",date:"2022-12-25T00:00:00.000Z",formattedDate:"December 25, 2022",tags:[{label:"ERC1155",permalink:"/en/blog/tags/erc-1155"},{label:"ERC721",permalink:"/en/blog/tags/erc-721"},{label:"NFT",permalink:"/en/blog/tags/nft"},{label:"FT",permalink:"/en/blog/tags/ft"},{label:"solidity",permalink:"/en/blog/tags/solidity"}],readingTime:7.39,hasTruncateMarker:!1,authors:[{name:"Thurendous",title:"Think borderlessly",url:"https://github.com/thurendous",imageURL:"https://github.com/thurendous.png",key:"Thurendous"},{name:"Polymetis",title:"Do your best now",url:"https://github.com/PolymetisOutis",imageURL:"https://github.com/PolymetisOutis.png",key:"Polymetis"}],frontMatter:{slug:"what-is-ERC1155-with-code-explained",title:"ERC1155\u3068\u306f\u306a\u3093\u305e\u3084\uff08\u30b3\u30fc\u30c9\u89e3\u8aac\uff09",authors:["Thurendous","Polymetis"],blogDescription:"ERC1155\u3068\u306f\u306a\u3093\u305e\u3084",tags:["ERC1155","ERC721","NFT","FT","solidity"]},nextItem:{title:"solidity\u306b\u304a\u3044\u3066\u306a\u305cprivate\u306a\u5909\u6570\u306fprivate\u3067\u306f\u306a\u3044\u306e\u304b",permalink:"/en/blog/private-variable-in-solidity-with-code-explained"}},s={authorsImageUrls:[void 0,void 0]},d=[{value:"\u72b6\u614b\u5909\u6570\u306f\uff14\u3064",id:"\u72b6\u614b\u5909\u6570\u306f\uff14\u3064",level:2},{value:"ERC1155 \u95a2\u6570",id:"erc1155-\u95a2\u6570",level:2}],m={toc:d};function u(e){let{components:n,...i}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,i,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"BYAC",src:t(5399).Z,width:"551",height:"551"})),(0,r.kt)("h1",{id:"tldr"},"TL;DR"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"ERC721 \u306f\u4e00\u7a2e\u306e NFT \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306e\u306b\u5bfe\u3057\u3001ERC1155 \u306f\u8907\u6570\u306e NFT \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002"),(0,r.kt)("li",{parentName:"ul"},"ERC1155 \u306e ERC721 \u3068\u306e\u9055\u3044",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"token id \u306f\u7a2e\u985e\u3092\u898f\u5b9a\u3057\u3001id \u3054\u3068\u306b amount \u3068\u3044\u3046\u6570\u91cf\u3092\u5b9a\u7fa9\u3057\u305f"),(0,r.kt)("li",{parentName:"ul"},"\u30d0\u30c3\u30c1\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u305f"))),(0,r.kt)("li",{parentName:"ul"},"\u4eca\u56de\u306f ERC1155 \u306e\u30b3\u30fc\u30c9\u89e3\u8aac\u3092\u3057\u305f")),(0,r.kt)("h1",{id:"eip1155"},"EIP1155"),(0,r.kt)("p",null,"ERC20 \u306b\u3057\u308d ERC721 \u306b\u3057\u308d\u3001\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u3054\u3068\u306b\u4e00\u7a2e\u306e\u30b3\u30a4\u30f3\u306b\u3057\u304b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001\u6211\u3005\u304c\u30dd\u30b1\u30e2\u30f3\u306e\u30b2\u30fc\u30e0\u3092\u4f5c\u308d\u3046\u3068\u3059\u308b\u3068\u3001ERC21 \u3042\u308b\u3044\u306f ERC721 \u3092\u4f7f\u3046\u3068\u88c5\u5099\u3054\u3068\u306b\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u306a\u3044\u3068\u884c\u3051\u306a\u3044\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u4e00\u5343\u7a2e\u985e\u306e\u30a2\u30a4\u30c6\u30e0\u304c\u3042\u308b\u3068\u3059\u308b\u3068\u3001\u4e00\u5343\u500b\u306e\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u3092\u4f5c\u3089\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\u3053\u308c\u306f\u3068\u3093\u3067\u3082\u306a\u3044\u3053\u3068\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u8ab2\u984c\u3092\u89e3\u6c7a\u3059\u304f\u3001\u30a4\u30fc\u30b5\u30ea\u30a2\u30e0\u306e ",(0,r.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-1155"},"EIP1155")," \u3067\u306f\u3001\u4e00\u500b\u306e\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u306b\u8907\u6570\u306e FT \u3042\u308b\u3044\u306f NFT \u3092\u542b\u3081\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\u7279\u306b GameFi \u306e\u30b1\u30fc\u30b9\u3067\u306f\u975e\u5e38\u306b\u6709\u7528\u3067\u3059\u3002"),(0,r.kt)("p",null,"\u30b7\u30f3\u30d7\u30eb\u306b\u8a00\u3046\u3068\u3001ERC1155 \u306f\u524d\u306b\u7d39\u4ecb\u3057\u305f NFT \u306e token \u30b9\u30bf\u30f3\u30c0\u30fc\u30c9 ERC721 \u3068\u4f3c\u3066\u3044\u308b\uff1aERC721 \u3067\u306f\u3001token \u3054\u3068\u306b",(0,r.kt)("inlineCode",{parentName:"p"},"tokenId"),"\u3092\u6301\u3063\u3066\u304a\u308a\u3001\u3053\u306e id \u304c\u30e6\u30cb\u30fc\u30af\u3067\u3059\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"tokenId"),"\u306f\u4e00\u500b\u306e token \u3092\u4ee3\u8868\u3057\u3066\u3044\u308b\u3002\u305d\u308c\u306b\u5bfe\u3057\u3066\u3001ERC1155 \u306e\u5834\u5408\u306f\u3001token \u3054\u3068\u306b id \u304c\u30e6\u30cb\u30fc\u30af\u3060\u304c\u3001id \u3054\u3068\u306b\u6570\u91cf\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3002\u3053\u308c\u3067\u3001\u8907\u6570\u306e\u7a2e\u985e\u306e token \u306f\u540c\u3058\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u5185\u3067\u7ba1\u7406\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002"),(0,r.kt)("p",null,"\u7a2e\u985e\u3054\u3068\u306b URI \u304c\u5b58\u5728\u3057\u3066\u3044\u3066\u3001matadata \u3092\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002ERC721 \u306e URI \u3068\u985e\u4f3c\u3059\u308b\u304c\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001ERC1155 \u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u306e\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sol"},"/**\n * @dev ERC1155\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3001URI()\u3067metadata\u3092\u8fd4\u3059\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev id\u306eURI\u3092\u8fd4\u3059\n     */\n    function uri(uint256 id) external view returns (string memory);\n")),(0,r.kt)("p",null,"\u3067\u306f\u3001\u3069\u306e\u3088\u3046\u306b\u30c8\u30fc\u30af\u30f3\u306f FT \u304b NFT \u3092\u533a\u5225\u3059\u308b\u306e\u304b\uff1f\u7b54\u3048\u7c21\u5358\u3060\u3001id \u306e\u6570\u91cf\u304c 1 \u306e\u5834\u5408\u3067\u3059\u3068\u3001\u3053\u308c\u306f NFT \u3067\u3042\u308a\u3001ERC721 \u3068\u4f3c\u3066\u3044\u308b\u3002\u3082\u3057 id \u306b\u5bfe\u5fdc\u3059\u308b token \u306e\u6570\u91cf\u304c 1 \u3088\u308a\u5927\u304d\u3044\u5834\u5408\u3001\u305d\u308c\u306f FT \u3068\u306a\u308b\u3002\u540c\u3058 id \u3092\u5171\u6709\u3057\u3066\u3044\u308b\u306e\u3067\u3001ERC20 \u306b\u985e\u4f3c\u3057\u307e\u3059\u3002"),(0,r.kt)("h1",{id:"ierc1155-\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9"},"IERC1155 \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9"),(0,r.kt)("p",null,"ERC1155 \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u306f EIP1155 \u306e\u5b9f\u73fe\u3059\u3079\u304d\u6a5f\u80fd\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u4e2d\u3067\u30014 \u3064\u306e\u30a4\u30d9\u30f3\u30c8\u3068 6 \u500b\u306e\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002ERC721 \u3068\u306e\u9055\u3044\u3068\u3057\u3066\u306f\u3001ERC1155 \u306f\u8907\u6570\u306e\u7a2e\u985e\u306e token \u3092\u542b\u307e\u308c\u307e\u3059\u3002\u307e\u305f\u3001\u30d0\u30c3\u30c1\u30c8\u30e9\u30f3\u30b9\u30d5\u30a1\u3001\u30d0\u30c3\u30c1\u30d0\u30e9\u30f3\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u6a5f\u80fd\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sol"},'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport "https://github.com/AmazingAng/WTF-Solidity/blob/main/40_ERC1155/IERC1155.sol";\n\n/**\n * @dev ERC1155\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3001EIP1155\u3067\u6c42\u3081\u3089\u308c\u305f\u6a5f\u80fd\u3092\u5b9a\u7fa9\n * \u8a73\u7d30\uff1ahttps://eips.ethereum.org/EIPS/eip-1155[EIP].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev \u5358\u4e00\u306a\u7a2e\u985e\u306etoken\u306e\u30c8\u30e9\u30f3\u30b9\u30d5\u30a1\u30a4\u30d9\u30f3\u30c8\n     * `value`\u500b\u306e`id`\u7a2e\u985e\u306etoken\u304c`operator`\u306b\u3088\u3063\u3066`from`\u304b\u3089`to`\u3078\u30c8\u30e9\u30f3\u30b9\u30d5\u30a1\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev \u30d0\u30c3\u30c1\u30c8\u30e9\u30f3\u30b9\u30d5\u30a1\u30a4\u30d9\u30f3\u30c8\n     * ids, values\u306f\u30c8\u30e9\u30f3\u30b9\u30d5\u30a1\u3059\u308btoken\u306e\u7a2e\u985e\u3001\u6570\u91cf\u306e\u914d\u5217\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev \u30d0\u30c3\u30c1\u30a2\u30d7\u30eb\u30fc\u30d6\n     * `account`\u304c\u3059\u3079\u3066\u306e\u6a29\u9650\u3092`operator`\u306b\u79fb\u8b72\u3059\u308b\u3068\u304d\u306b\u653e\u51fa\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev `id`\u306etoken\u306eURI\u304c\u5909\u66f4\u3068\u306a\u3063\u305f\u3068\u304d\u3001\u653e\u51fa\u3002`value`\u306f\u65b0\u305f\u306aURI\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev \u30d0\u30e9\u30f3\u30b9\u3092\u8fd4\u3059\uff0c`account`\u304c\u6301\u3063\u3066\u3044\u308b`id`\u306etoken\u306e\u6b8b\u9ad8\u3092\u8fd4\u3059\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev \u30d0\u30c3\u30c1\u3067\u8907\u6570\u30d0\u30e9\u30f3\u30b9\u3092\u8fd4\u3059\u3002`accounts`\u306e\u914d\u5217\u3068`ids`\u914d\u5217\u306elength\u304c\u30a4\u30b3\u30fc\u30eb\u3067\u306a\u3044\u3068\u3044\u3051\u306a\u3044\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev \u30d0\u30c3\u30c1\u3067\u8907\u6570\u30a2\u30d7\u30eb\u30fc\u30d6\uff0ccaller\u306etoken\u306e\u6a29\u9650\u3092`operator`\u306b\u6e21\u3059\n     * {ApprovalForAll}\u30a4\u30d9\u30f3\u30c8\u3092\u653e\u51fa\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev \u30d0\u30c3\u30c1\u3067\u30a2\u30d7\u30eb\u30fc\u30d6\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3001bool\u3092\u8fd4\u3059\u3002`operator`\u304c`account`\u306b\u3088\u3063\u3066\u30a2\u30d7\u30eb\u30fc\u30d6\u3055\u308c\u305f\u5834\u5408\uff0c`true`\u3092\u8fd4\u3059\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev \u30bb\u30fc\u30d5\u30c8\u30e9\u30f3\u30b9\u30d5\u30a1\u3001`amount`\u6570\u91cf\u306e`id`\u7a2e\u985e\u306etoken\n     * {TransferSingle}\u30a4\u30d9\u30f3\u30c8\u3092\u653e\u51fa\n     * \u6761\u4ef6\uff1a\n     * - caller\u304cowner\u3067\u306f\u306a\u3044\u5834\u5408\u3001\u6a29\u9650\u3082\u3063\u3066\u3044\u306a\u3044\u3068\u4f7f\u3048\u306a\u3044\n     * - `from`\u306f\u5341\u5206\u306atoken\u3092\u3082\u3063\u3066\u3044\u308b\n     * - \u9001\u308a\u5148\u304c\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u306e\u5834\u5408\uff0c`IERC1155Receiver`\u306e`onERC1155Received`\u95a2\u6570\u3092\u5b9f\u88c5\u3057\u3066\u3044\u306a\u3044\u3068\u901a\u3089\u306a\u3044\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev \u30d0\u30c3\u30c1\u30bb\u30fc\u30d5\u30c8\u30e9\u30f3\u30b9\u30d5\u30a1\n     * {TransferBatch}\u30a4\u30d9\u30f3\u30c8\u3092\u653e\u51fa\n     * \u6761\u4ef6\uff1a\n     * - `ids`\u3001`amounts`\u306elength\u304c\u540c\u3058\n     * - \u9001\u308a\u5148\u304c\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u306e\u5834\u5408\uff0c`IERC1155Receiver`\u306e`onERC1155Received`\u95a2\u6570\u3092\u5b9f\u88c5\u3057\u3066\u3044\u306a\u3044\u3068\u901a\u3089\u306a\u3044\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n\n')),(0,r.kt)("h1",{id:"erc1155-\u306e\u30a4\u30d9\u30f3\u30c8"},"ERC1155 \u306e\u30a4\u30d9\u30f3\u30c8"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TransferSingle")," event: \u5358\u4e00\u306a\u7a2e\u985e\u306e\u30c8\u30e9\u30f3\u30b9\u30d5\u30a1\u30a4\u30d9\u30f3\u30c8\u3001\u30c8\u30e9\u30f3\u30b9\u30d5\u30a1\u304c\u8d77\u304d\u305f\u3068\u304d\u306b\u653e\u51fa"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TransferBatch")," event: \u30d0\u30c3\u30c1\u30c8\u30fc\u30af\u30f3\u30c8\u30e9\u30f3\u30b9\u30d5\u30a1\u306e\u30a4\u30d9\u30f3\u30c8\u3001\u30d0\u30c3\u30c1\u306e\u30c8\u30e9\u30f3\u30b9\u30d5\u30a1\u304c\u8d77\u304d\u305f\u3068\u304d\u306b\u653e\u51fa"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ApprovalForAll")," event: \u30d0\u30c3\u30c1\u30a2\u30d7\u30eb\u30fc\u30d6\u306e\u30a4\u30d9\u30f3\u30c8\u3001\u30d0\u30c3\u30c1\u30a2\u30d7\u30eb\u30fc\u30d6\u304c\u8d77\u304d\u305f\u3068\u304d\u306b\u653e\u51fa"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"URI")," event: metadata \u306e\u30a2\u30c9\u30ec\u30b9\u5909\u66f4\u306e\u30a4\u30d9\u30f3\u30c8\u3001",(0,r.kt)("inlineCode",{parentName:"li"},"uri"),"\u5909\u66f4\u6642\u306b\u653e\u51fa")),(0,r.kt)("h1",{id:"ierc1155"},"IERC1155"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"balanceOf()"),": \u5358\u4e00\u306a\u7a2e\u985e\u306e\u6b8b\u9ad8\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002",(0,r.kt)("inlineCode",{parentName:"li"},"account"),"\u306e\u6301\u3063\u3066\u3044\u308b",(0,r.kt)("inlineCode",{parentName:"li"},"id"),"\u7a2e\u985e\u306e token \u306e\u30d0\u30e9\u30f3\u30b9"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"balanceOfBatch()"),": \u591a\u7a2e\u985e\u306e\u30d0\u30e9\u30f3\u30b9\u3092\u30c1\u30a7\u30c3\u30af\u3002\u30c1\u30a7\u30c3\u30af\u3059\u308b",(0,r.kt)("inlineCode",{parentName:"li"},"accounts"),"\u304c",(0,r.kt)("inlineCode",{parentName:"li"},"ids"),"\u3068\u306e length \u304c\u540c\u3058\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308b"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"setApprovalForAll()"),": \u30d0\u30c3\u30c1\u30a2\u30d7\u30eb\u30fc\u30d6\u3001caller \u306e token \u3092 operator \u306b\u6a29\u9650\u3092\u79fb\u8b72\u3059\u308b"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"isApprovalForAll()"),": \u30d0\u30c3\u30c1\u30a2\u30d7\u30eb\u30fc\u30d6\u306e\u60c5\u5831\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002",(0,r.kt)("inlineCode",{parentName:"li"},"operator"),"\u304c",(0,r.kt)("inlineCode",{parentName:"li"},"account"),"\u306b\u3088\u3063\u3066\u6a29\u9650\u3092\u3082\u3089\u3063\u3066\u3044\u308b\u5834\u5408\u306f",(0,r.kt)("inlineCode",{parentName:"li"},"true"),"\u3092\u8fd4\u3059"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"safeTransferFrom()"),": \u30bb\u30fc\u30d5\u306a\u5358\u4e00\u306e token \u306e\u30c8\u30e9\u30f3\u30b9\u30d5\u30a1\u3002",(0,r.kt)("inlineCode",{parentName:"li"},"amount"),"\u6570\u91cf\u306e",(0,r.kt)("inlineCode",{parentName:"li"},"id"),"\u7a2e\u985e\u306e token \u3092",(0,r.kt)("inlineCode",{parentName:"li"},"from"),"\u304b\u3089\u3001",(0,r.kt)("inlineCode",{parentName:"li"},"to"),"\u3078\u9001\u308b\u3002",(0,r.kt)("inlineCode",{parentName:"li"},"to"),"\u304c\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u306e\u5834\u5408\u3001",(0,r.kt)("inlineCode",{parentName:"li"},"onERC1155BatchReceived()"),"\u95a2\u6570\u306e\u5b9f\u88c5\u304c\u3042\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3055\u308c\u308b\u3002")),(0,r.kt)("h1",{id:"erc1155-\u3092\u53d7\u3051\u53d6\u308b\u305f\u3081\u306b\u7528\u610f\u3059\u308b\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u306e\u5f62"},"ERC1155 \u3092\u53d7\u3051\u53d6\u308b\u305f\u3081\u306b\u3001\u7528\u610f\u3059\u308b\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u306e\u5f62"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ERC721"),"\u3068\u540c\u3058\u3088\u3046\u306b\u3001NFT \u3092\u9001\u3063\u3066\u30ed\u30c3\u30af\u3055\u308c\u3066\u3057\u307e\u3046\u3053\u3068\u3092\u907f\u3051\u308b\u305f\u3081\u306b\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"ERC1155"),"\u306f\u53d7\u3051\u53d6\u308b\u5074\u306e\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u306b",(0,r.kt)("inlineCode",{parentName:"p"},"IERC1155Receiver"),"\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u3092\u7d99\u627f\u3057\u30012 \u3064\u306e\u95a2\u6570\u3092\u5b9f\u88c5\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"onERC1155Recieved()"),": \u5358\u4e00\u306a\u7a2e\u985e\u306e token \u3092\u53d7\u3051\u53d6\u308b\u305f\u3081\u306e\u95a2\u6570\u3002ERC1155 \u306e\u30bb\u30fc\u30d5\u30c8\u30e9\u30f3\u30b9\u30d5\u30a1\u3067\u3042\u308b",(0,r.kt)("inlineCode",{parentName:"li"},"safeTransferFrom"),"\u95a2\u6570\u304b\u3089\u306e\u30c8\u30e9\u30f3\u30b9\u30d5\u30a1\u3092\u53d7\u3051\u308b\u305f\u3081\u306b\u306f\u3001\u81ea\u5206\u81ea\u8eab\u306e selector \u3067\u3042\u308b",(0,r.kt)("inlineCode",{parentName:"li"},"0xf23a6e61"),"\u3092\u8fd4\u3059"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"onERC1155BatchReceived()"),": \u8907\u6570\u7a2e\u985e\u306e token \u3092\u53d7\u3051\u53d6\u308b\u7528\u306e\u95a2\u6570\u3002",(0,r.kt)("inlineCode",{parentName:"li"},"ERC1155"),"\u306e\u30bb\u30fc\u30d5\u30c8\u30e9\u30f3\u30b9\u30d5\u30a1",(0,r.kt)("inlineCode",{parentName:"li"},"safeBatchTransferFrom"),"\u304b\u3089\u306e\u30c8\u30e9\u30f3\u30b9\u30d5\u30a1\u3092\u53d7\u3051\u53d6\u308b\u305f\u3081\u306b\u3001\u81ea\u5206\u81ea\u8eab\u3067 selector",(0,r.kt)("inlineCode",{parentName:"li"},"0xbc197c81"),"\u3092\u8fd4\u3059\u5fc5\u8981\u304c\u3042\u308b\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sol"},'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport "https://github.com/AmazingAng/WTFSolidity/blob/main/34_ERC721/IERC165.sol";\n\n/**\n * @dev ERC1155\u3092\u53d7\u3051\u53d6\u308b\u305f\u3081\u306e\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u3001ERC1155\u306etoken\u3092\u53d7\u3051\u53d6\u308b\u306b\u306f\u3053\u308c\u3092\u5b9f\u88c5\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev ERC1155\u306e`safeTransferFrom`\u306e\u30c8\u30e9\u30f3\u30b9\u30d5\u30a1\u3092\u53d7\u3051\u308b\n     * 0xf23a6e61 \u3042\u308b\u3044\u306f `bytes4(keccak256("onERC1155Received(address,address,uint256,uint256,bytes)"))`\u3092\u8fd4\u3059\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev ERC1155\u306e`safeBatchTransferFrom`\u3092\u53d7\u3051\u308b\n     *  0xbc197c81 \u3042\u308b\u3044\u306f `bytes4(keccak256("onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"))`\u3092\u8fd4\u3059\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n')),(0,r.kt)("h1",{id:"erc1155-\u306e\u30e1\u30a4\u30f3\u30b3\u30f3\u30c8\u30e9\u30af\u30c8"},"ERC1155 \u306e\u30e1\u30a4\u30f3\u30b3\u30f3\u30c8\u30e9\u30af\u30c8"),(0,r.kt)("p",null,"\u30e1\u30a4\u30f3\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u306f",(0,r.kt)("inlineCode",{parentName:"p"},"IERC1155"),"\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u898f\u5b9a\u306e\u95a2\u6570\u3092\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\u307e\u305f\u3001\u5358\u4e00\u306a\u7a2e\u985e/\u8907\u6570\u306e\u7a2e\u985e\u306e token \u306e\u30df\u30f3\u30c8\u3001\u30d0\u30fc\u30f3\u95a2\u6570\u3082\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002"),(0,r.kt)("h2",{id:"\u72b6\u614b\u5909\u6570\u306f\uff14\u3064"},"\u72b6\u614b\u5909\u6570\u306f\uff14\u3064"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name"),": token \u540d"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"symbol"),": token \u30b7\u30f3\u30dc\u30eb"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"_balances"),": token \u30d0\u30e9\u30f3\u30b9\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3002",(0,r.kt)("inlineCode",{parentName:"li"},"id"),"\u306e owner \u306e\u30a2\u30c9\u30ec\u30b9\u306e\u30d0\u30e9\u30f3\u30b9\u3092\u8a18\u9332"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"_operatorApprovals"),": \u30d0\u30c3\u30c1\u3067\u30a2\u30d7\u30eb\u30fc\u30d6\u3092\u3059\u308b\u305f\u3081\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3002\u6b8b\u9ad8\u3092\u6301\u3063\u3066\u3044\u308b\u30a2\u30c9\u30ec\u30b9\u306e\u30a2\u30d7\u30eb\u30fc\u30d6\u72b6\u614b\u3092\u8a18\u9332")),(0,r.kt)("h2",{id:"erc1155-\u95a2\u6570"},"ERC1155 \u95a2\u6570"),(0,r.kt)("p",null,"\u5168\u90e8\u3067 16 \u500b\u306e\u95a2\u6570\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002 \u3082\u3061\u308d\u3093\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"ERC1155"),"\u898f\u5b9a\u306e\u95a2\u6570\u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"constructor"),": \u5f15\u6570\u306f name, symbol"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"supportsInterface()"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ERC165"),"\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u3092\u5b9f\u73fe\u3001support \u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u8fd4\u3059\u3002\u4ed6\u306e\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u304c\u30c1\u30a7\u30c3\u30af\u3059\u308b\u7528\u306b\u6e96\u5099\u3059\u308b"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"balanceOf()"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"IERC1166"),"\u306e\u6b8b\u9ad8\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u95a2\u6570\u3002",(0,r.kt)("inlineCode",{parentName:"li"},"ERC721"),"\u3068\u9055\u3046\u306e\u306f\u3001\u5f15\u6570\u306f",(0,r.kt)("inlineCode",{parentName:"li"},"account"),"\u53ca\u3073",(0,r.kt)("inlineCode",{parentName:"li"},"id"),"\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"balanceOfBatch()"),": \u30d0\u30c3\u30c1\u3067\u8907\u6570\u306e\u30d0\u30e9\u30f3\u30b9\u3092\u8fd4\u3059\u95a2\u6570"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"setApprovalForAll()"),": \u30d0\u30c3\u30c1\u3067\u8907\u6570\u306e\u30a2\u30d7\u30eb\u30fc\u30d6\u3092\u3059\u308b\u95a2\u6570\u3002",(0,r.kt)("inlineCode",{parentName:"li"},"ApprovalForAll"),"\u30a4\u30d9\u30f3\u30c8\u3092\u653e\u51fa\u3059\u308b"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"isApprovedForAll()"),": \u5168\u90e8\u306e\u6a29\u9650\u3092\u6301\u3063\u3066\u3044\u308b\u30a2\u30c9\u30ec\u30b9\u306a\u306e\u304b\u306e\u78ba\u8a8d\u3092\u3059\u308b\u95a2\u6570\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"safeTransferFrom()"),": \u5358\u4e00\u306a\u7a2e\u985e\u306e token \u306e\u30c8\u30e9\u30f3\u30b9\u30d5\u30a1\u3092\u3059\u308b\u95a2\u6570\u3002",(0,r.kt)("inlineCode",{parentName:"li"},"TransferSingle"),"\u30a4\u30d9\u30f3\u30c8\u3092\u653e\u51fa\u3002",(0,r.kt)("inlineCode",{parentName:"li"},"ERC721"),"\u3068\u9055\u3046\u306e\u306f\u3001\u5f15\u6570\u306f",(0,r.kt)("inlineCode",{parentName:"li"},"from"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"to"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"id"),"\u4ee5\u5916\u306b\u3082\u3001",(0,r.kt)("inlineCode",{parentName:"li"},"amount"),"\u3068\u3044\u3046\u306e\u304c\u5fc5\u8981\u3068\u306a\u308b\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"safeBatchTransferFrom()"),": \u8907\u6570\u7a2e\u985e\u306e token \u3092\u30c8\u30e9\u30f3\u30b9\u30d5\u30a1\u3059\u308b\u95a2\u6570\u3002",(0,r.kt)("inlineCode",{parentName:"li"},"TransferBatch"),"\u3092\u653e\u51fa\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"_mint()"),": \u4e00\u7a2e\u985e\u306e token \u3092\u92f3\u9020"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"_mintBatch()"),": \u8907\u6570\u7a2e\u985e\u306e token \u3092\u92f3"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"_burn()"),": \u4e00\u7a2e\u985e\u306e token \u3092 burn \u3059\u308b"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"_burBatch()"),": \u8907\u6570\u7a2e\u985e\u306e token \u3092 burn \u3059\u308b"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"doSafeTransferAcceptanceCheck()"),": \u4e00\u7a2e\u985e\u306e token \u306e\u30c8\u30e9\u30f3\u30b9\u30d5\u30a1\u306e\u30bb\u30fc\u30d5\u30c1\u30a7\u30c3\u30af\u3002",(0,r.kt)("inlineCode",{parentName:"li"},"safeTransferFrom()"),"\u306b\u3088\u3063\u3066\u4f7f\u308f\u308c\u308b\u3002",(0,r.kt)("inlineCode",{parentName:"li"},"onERC1155received()"),"\u95a2\u6570\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"uri()"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ERC1155"),"\u306e",(0,r.kt)("inlineCode",{parentName:"li"},"id"),"\u306e\u7a2e\u985e\u306e metadata \u306e\u30ea\u30f3\u30af\u3092\u8fd4\u3059\u3002",(0,r.kt)("inlineCode",{parentName:"li"},"ERC721"),"\u306e",(0,r.kt)("inlineCode",{parentName:"li"},"tokenURI"),"\u3068\u4f3c\u3066\u3044\u308b\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"baseURI()"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"baseURI"),"\u3092\u8fd4\u3059\u3002uri \u306f",(0,r.kt)("inlineCode",{parentName:"li"},"baseURI"),"\u3001",(0,r.kt)("inlineCode",{parentName:"li"},"id"),"\u3092\u63a5\u7d9a\u3059\u308b\u306e\u3067\u3001\u901a\u5e38\u306f\u958b\u767a\u8005\u304c\u66f8\u304d\u63db\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sol"},'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport "./IERC1155.sol";\nimport "./IERC1155Receiver.sol";\nimport "./IERC1155MetadataURI.sol";\nimport "https://github.com/AmazingAng/WTFSolidity/blob/main/34_ERC721/Address.sol";\nimport "https://github.com/AmazingAng/WTFSolidity/blob/main/34_ERC721/String.sol";\nimport "https://github.com/AmazingAng/WTFSolidity/blob/main/34_ERC721/IERC165.sol";\n\n/**\n * @dev ERC1155\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u306eimplementation\n * \u8a73\u7d30\u306fhttps://eips.ethereum.org/EIPS/eip-1155\n */\ncontract ERC1155 is IERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address; // library Address\n    using Strings for uint256; // library Strings\n    // Token\u540d\n    string public name;\n    // Token\u30b7\u30f3\u30dc\u30eb\n    string public symbol;\n    // token\u7a2e\u985e\u306eid \u2192 account \u2192 balances \u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3001\u6b8b\u9ad8\u3092\u8a18\u9332\u3059\u308b\u7528\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n    // address \u2192 adderss \u306e\u5168\u6a29\u79fb\u8b72\u306e\u8a18\u9332\u3092\u3059\u308b\u30de\u30c3\u30d4\u30f3\u30b0\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3001\u521d\u671f\u5316\u306e\u5024`name` \u3001`symbol`\n     */\n    constructor(string memory name_, string memory symbol_) {\n        name = name_;\n        symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            interfaceId == type(IERC165).interfaceId;\n    }\n\n    /**\n     * @dev \u30d0\u30e9\u30f3\u30b9\u3092\u8fd4\u3059\u95a2\u6570\u3001IERC1155\u306ebalanceOf\u3002account\u306eid\u7a2e\u985e\u306etoken\u6570\u3092\u8fd4\u3059\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), "ERC1155: address zero is not a valid owner");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev \u8907\u6570\u306e\u30d0\u30e9\u30f3\u30b9\u3092\u8fd4\u3059\n     * \u6761\u4ef6:\n     * - `accounts` \u3001 `ids` \u306elength\u304c\u540c\u3058\u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public view virtual override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, "ERC1155: accounts and ids length mismatch");\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n        return batchBalances;\n    }\n\n    /**\n     * @dev \u8907\u6570\u306e\u30a2\u30d7\u30eb\u30fc\u30d6\u3092\u3059\u308b\u95a2\u6570\u3002caller\u306foperator\u306b\u5168\u6a29\u79fb\u8b72\u3092\u3059\u308b\n     * {ApprovalForAll}\u30aa\u30d9\u30f3\u30c8\u3092\u653e\u51fa\n     * \u6761\u4ef6\uff1amsg.sender != operator\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        require(msg.sender != operator, "ERC1155: setting approval status for self");\n        _operatorApprovals[msg.sender][operator] = approved;\n        emit ApprovalForAll(msg.sender, operator, approved);\n    }\n\n    /**\n     * @dev \u30d0\u30c3\u30c1\u78ba\u8a8d\u3001\u8907\u6570\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev \u30bb\u30fc\u30d5\u30c8\u30e9\u30f3\u30b9\u30d5\u30a1\uff0c`amount`\u6570\u91cf\u306e`id`token\u3092`from`\u304b\u3089`to`\u3078\u9001\u308b\u95a2\u6570\n     *  {TransferSingle} \u30a4\u30d9\u30f3\u30c8\u3092\u653e\u51fa\n     * \u6761\u4ef6\uff1a\n     * - to \u30bc\u30ed\u30a2\u30c9\u30ec\u30b9\u3067\u306a\u3044\u3053\u3068\n     * - from\u30a2\u30c9\u30ec\u30b9\u306f\u5341\u5206\u306atoken\u6570\u3092\u6301\u3063\u3066\u304a\u308a\u3001caller\u306f\u6a29\u9650\u3092\u6301\u3063\u3066\u3044\u308b\u3053\u3068\n     * - to \u304c\u30b9\u30de\u30fc\u30c8\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u306e\u5834\u5408\u3001IERC1155Receiver-onERC1155Received\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u3053\u3068\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        address operator = msg.sender;\n        // owner\u304b\u3001\u6a29\u9650\u3092\u3082\u3089\u3063\u3066\u3044\u308b\u304b\u306e\u30c1\u30a7\u30c3\u30af\n        require(\n            from == operator || isApprovedForAll(from, operator),\n            "ERC1155: caller is not token owner nor approved"\n        );\n        require(to != address(0), "ERC1155: transfer to the zero address");\n        // from\u306f\u5341\u5206\u306atoken\u6570\u3092\u6301\u3063\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, "ERC1155: insufficient balance for transfer");\n        // \u30d0\u30e9\u30f3\u30b9\u3092\u66f4\u65b0\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n        // \u30a4\u30d9\u30f3\u30c8\u653e\u51fa\n        emit TransferSingle(operator, from, to, id, amount);\n        // \u30bb\u30fc\u30d5\u306a\u30c8\u30e9\u30f3\u30b9\u30d5\u30a1\u306e\u30c1\u30a7\u30c3\u30af\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev \u30d0\u30c3\u30c1\u3067\u8907\u6570\u306e\u30c8\u30e9\u30f3\u30b9\u30d5\u30a1\uff0c`amounts`\u3068\u3044\u3046\u6570\u91cf\u306e\u914d\u5217\u3001`ids`\u3068\u3044\u3046toke\u7a2e\u985e\u306e\n     * \u914d\u5217\u3092\u4f7f\u3063\u3066`from`\u304b\u3089`to`\u3078\u9001\u308b\n     *  {TransferSingle} \u30a4\u30d9\u30f3\u30c8\n     * \u6761\u4ef6:\n     * - to \u30bc\u30ed\u30a2\u30c9\u30ec\u30b9\u3067\u306a\u3044\n     * - from\u30a2\u30c9\u30ec\u30b9\u306f\u5341\u5206\u306atoken\u6570\u3092\u6301\u3063\u3066\u304a\u308a\u3001caller\u306f\u6a29\u9650\u3092\u6301\u3063\u3066\u3044\u308b\u3053\u3068\n     * - to \u304c\u30b9\u30de\u30fc\u30c8\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u306e\u5834\u5408\u3001IERC1155Receiver-onERC1155Received\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u3053\u3068\n     * - ids\u3001amounts\u306e\u914d\u5217\u306elength\u304c\u540c\u3058\u3067\u3042\u308b\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        address operator = msg.sender;\n        // owner\u304b\u3001\u6a29\u9650\u3092\u3082\u3089\u3063\u3066\u3044\u308b\u304b\u306e\u30c1\u30a7\u30c3\u30af\n        require(\n            from == operator || isApprovedForAll(from, operator),\n            "ERC1155: caller is not token owner nor approved"\n        );\n        // \u914d\u5217\u306e\u9577\u3055\u304c\u4e00\u7dd2\u3067\u3042\u308b\n        require(ids.length == amounts.length, "ERC1155: ids and amounts length mismatch");\n        // \u30bc\u30ed\u30a2\u30c9\u30ec\u30b9\u3067\u306a\u3044\u3053\u3068\n        require(to != address(0), "ERC1155: transfer to the zero address");\n\n        // for loop\u3067\u30d0\u30e9\u30f3\u30b9\u3092\u66f4\u65b0\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, "ERC1155: insufficient balance for transfer");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n        // \u30bb\u30fc\u30d5\u306a\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u306e\u30c1\u30a7\u30c3\u30af\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev mint\u92f3\u9020\u95a2\u6570\n     *  {TransferSingle} \u30a4\u30d9\u30f3\u30c8\u3092\u653e\u51fa\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), "ERC1155: mint to the zero address");\n\n        address operator = msg.sender;\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev \u30d0\u30c3\u30c1\u3067\u92f3\u9020\n     * \u91ca\u653e {TransferBatch} \u4e8b\u4ef6.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), "ERC1155: mint to the zero address");\n        require(ids.length == amounts.length, "ERC1155: ids and amounts length mismatch");\n\n        address operator = msg.sender;\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev \u30d0\u30fc\u30f3\u95a2\u6570\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), "ERC1155: burn from the zero address");\n\n        address operator = msg.sender;\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, "ERC1155: burn amount exceeds balance");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n    }\n\n    /**\n     * @dev \u30d0\u30fc\u30f3\u95a2\u6570\uff1a\u8907\u6570\u3092\u540c\u6642\u306b\u5b9f\u884c\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), "ERC1155: burn from the zero address");\n        require(ids.length == amounts.length, "ERC1155: ids and amounts length mismatch");\n\n        address operator = msg.sender;\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, "ERC1155: burn amount exceeds balance");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n    }\n\n    // @dev ERC1155\u306e\u30bb\u30fc\u30d5\u30c8\u30e9\u30f3\u30b9\u30d5\u30a1\u306e\u30c1\u30a7\u30c3\u30af\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert("ERC1155: ERC1155Receiver rejected tokens");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert("ERC1155: transfer to non-ERC1155Receiver implementer");\n            }\n        }\n    }\n\n    // @dev ERC1155\u306e\u8907\u6570\u30bb\u30fc\u30d5\u30c8\u30e9\u30f3\u30b9\u30d5\u30a1\u306e\u30c1\u30a7\u30c3\u30af\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert("ERC1155: ERC1155Receiver rejected tokens");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert("ERC1155: transfer to non-ERC1155Receiver implementer");\n            }\n        }\n    }\n\n    /**\n     * @dev ERC1155\u306eid\u306euri\u3092\u8fd4\u3059\u3001metadata\u3001ERC721\u306etokenURI\u306b\u540c\u3058\n     */\n    function uri(uint256 id) public view virtual override returns (string memory) {\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, id.toString())) : "";\n    }\n\n    /**\n     * {uri}\u306eBaseURI\u3092\u8fd4\u3059\uff0curi\u306fbaseURI\u3001tokenId\u3092\u3064\u306a\u3044\u3060\u3082\u306e\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return "";\n    }\n}\n\n')),(0,r.kt)("h1",{id:"remix-\u3067\u4f5c\u6210"},"remix \u3067\u4f5c\u6210"),(0,r.kt)("p",null,"\u4eca\u56de remix \u3067\u4f5c\u308b\u306e\u306f ERC1155 \u7248\u306e BAYC\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sol"},'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport "./ERC1155.sol";\n\ncontract BAYC1155 is ERC1155{\nuint256 constant MAX_ID = 10000;\n// \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\nconstructor() ERC1155("BAYC1155", "BAYC1155"){\n}\n\n    //BAYC\u306ebaseURI\u306f\u3053\u308c\uff1aipfs://QmeSjSinHpPnmXmspMjwiXyN6zS4E9zccariGR3jxcaWtq/\n    function _baseURI() internal pure override returns (string memory) {\n        return "ipfs://QmeSjSinHpPnmXmspMjwiXyN6zS4E9zccariGR3jxcaWtq/";\n    }\n\n    // \u30df\u30f3\u30c8\u95a2\u6570\n    function mint(address to, uint256 id, uint256 amount) external {\n        // id \u306f10,000\u3092\u8d85\u3048\u3066\u306f\u306a\u3089\u306a\u3044\n        require(id < MAX_ID, "id overflow");\n        _mint(to, id, amount, "");\n    }\n\n    // \u30d0\u30c3\u30c1\u3067\u30df\u30f3\u30c8\n    function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts) external {\n        // id \u306f10,000\u3092\u8d85\u3048\u3066\u306f\u306a\u3089\u306a\u3044\n        for (uint256 i = 0; i < ids.length; i++) {\n            require(ids[i] < MAX_ID, "id overflow");\n        }\n        _mintBatch(to, ids, amounts, "");\n    }\n\n}\n\n')),(0,r.kt)("p",null,"\u5b9f\u969b\u306e remix \u306b\u3064\u3044\u3066\u306f\u3001\u307e\u305f\u4eca\u5ea6\u306e\u6a5f\u4f1a\u306b\u66f8\u304d\u307e\u3059\u306e\u3067\u3001\u4eca\u56de\u306f\u5272\u611b\u3002"),(0,r.kt)("h1",{id:"\u6700\u5f8c\u306b"},"\u6700\u5f8c\u306b"),(0,r.kt)("p",null,"\u4eca\u56de\u306f",(0,r.kt)("inlineCode",{parentName:"p"},"ERC1155"),"\u306b\u3064\u3044\u3066\u5b66\u7fd2\u3057\u307e\u3057\u305f\u3002\u3044\u304b\u304c\u3067\u3057\u3087\u3046\u304b\u3002\u3053\u306e\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u306f\u540c\u3058\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u306b\u8907\u6570\u306e NFT \u3084 FT \u306e\u5171\u5b58\u3092\u8a31\u3057\u305f\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u3092\u53ef\u80fd\u306b\u3057\u305f\u306e\u3067\u3001\u500b\u4eba\u7684\u306b\u306f\u5927\u304d\u306a\u30b9\u30c6\u30c3\u30d7\u3060\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001BYAC \u306e\u6539\u9020\u3092\u3057\u3066\u7121\u7406\u3084\u308a",(0,r.kt)("inlineCode",{parentName:"p"},"ERC1155"),"\u306b\u3057\u307e\u3057\u305f\u3002\u307b\u3093\u3058\u3083\u3001\u307e\u305f\u306d\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"THE END")),(0,r.kt)("p",null,(0,r.kt)("img",{src:t(3598).Z,width:"468",height:"498"})))}u.isMDXComponent=!0},5399:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/whatiserc1155-73e1876b7ad47ee6aee70f89476c62bf.gif"},3598:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/yay-yas-40950e96eb137e87b2dcc4befc89bd7f.gif"}}]);