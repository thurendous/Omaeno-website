"use strict";(self.webpackChunkmy_website_with_docusaurus=self.webpackChunkmy_website_with_docusaurus||[]).push([[8587],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>m});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=u(t),m=i,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return t?r.createElement(f,a(a({ref:n},l),{},{components:t})):r.createElement(f,a({ref:n},l))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var u=2;u<o;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3581:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var r=t(7462),i=(t(7294),t(3905));const o={title:"22 Inheritance",author:"thurendous, Polymetis",date:"September 10, 2022",keywords:["solidity","inheritance"],description:"solidity inheritance",tags:["basic","inheritance"]},a=void 0,c={unversionedId:"Learning/inheritance",id:"Learning/inheritance",title:"22 Inheritance",description:"solidity inheritance",source:"@site/docs/Learning/22_inheritance.md",sourceDirName:"Learning",slug:"/Learning/inheritance",permalink:"/en/docs/Learning/inheritance",draft:!1,editUrl:"https://github.com/thurendous/Omaeno-website/tree/master/docs/Learning/22_inheritance.md",tags:[{label:"basic",permalink:"/en/docs/tags/basic"},{label:"inheritance",permalink:"/en/docs/tags/inheritance"}],version:"current",sidebarPosition:22,frontMatter:{title:"22 Inheritance",author:"thurendous, Polymetis",date:"September 10, 2022",keywords:["solidity","inheritance"],description:"solidity inheritance",tags:["basic","inheritance"]},sidebar:"tutorialSidebar",previous:{title:"21 Constructor",permalink:"/en/docs/Learning/constructor"},next:{title:"How to Use",permalink:"/en/docs/intro"}},s={},u=[],l={toc:u};function p(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\u30ef\u30fc\u30c9\u306e\u8aac\u660e\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"is"),":\u7d99\u627f\u3059\u308b\u3068\u304d\u306b\u4f7f\u308f\u308c\u3066\u3001\u8907\u6570\u7d99\u627f\u3082\u53ef\u80fd"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"virtual"),":\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\uff08\u4e0a\u66f8\u304d\uff09\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u95a2\u6570\u306b\u3064\u3051\u308b"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"override"),":\u5143\u306e\u95a2\u6570\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\uff08\u4e0a\u66f8\u304d\uff09\u3059\u308b\u3068\u304d\u306b\u95a2\u6570\u306b\u3064\u3051\u308b")),(0,i.kt)("p",null,"\u6ce8\u610f\uff1a\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u306e\u7d99\u627f\u306b\u3064\u3044\u3066\u306f\u6700\u3082\u30d9\u30fc\u30b9\u3068\u306a\u308b\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u304b\u3089\u6700\u3082\u65b0\u3057\u304f\u7d99\u627f\u3057\u305f\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u306e\u9806\u306b\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sol"},'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\n/* \u7d99\u627f\u306e\u95a2\u4fc2\u56f3\n    A\n   / \\\n  B   C\n / \\ /\nF  D,E\n*/\n\ncontract A {\n    function foo() public pure virtual returns (string memory) {\n        return "A";\n    }\n}\n\n// is\u3068\u3044\u3046\u30ef\u30fc\u30c9\u3092\u3064\u3051\u308b\u3060\u3051\u3067\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u3092\u7d99\u627f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n// \u3053\u306e\u5834\u5408\uff1aB\u304cA\u3092\u7d99\u627f\ncontract B is A {\n    // Override A.foo()\n    function foo() public pure virtual override returns (string memory) {\n        return "B";\n    }\n}\n\ncontract C is A {\n    // Override A.foo()\n    function foo() public pure virtual override returns (string memory) {\n        return "C";\n    }\n}\n\n// Contracts can inherit from multiple parent contracts.\n// When a function is called that is defined multiple times in\n// different contracts, parent contracts are searched from\n// right to left, and in depth-first manner.\n\ncontract D is B, C {\n    // D.foo() returns "C"\n    // since C is the right most parent contract with function foo()\n    function foo() public pure override(B, C) returns (string memory) {\n        return super.foo();\n    }\n}\n\ncontract E is C, B {\n    // E.foo() returns "B"\n    // since B is the right most parent contract with function foo()\n    function foo() public pure override(C, B) returns (string memory) {\n        return super.foo();\n    }\n}\n\n// Inheritance must be ordered from \u201cmost base-like\u201d to \u201cmost derived\u201d.\n// Swapping the order of A and B will throw a compilation error.\ncontract F is A, B {\n    function foo() public pure override(A, B) returns (string memory) {\n        return super.foo();\n    }\n}\n')))}p.isMDXComponent=!0}}]);