<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://omaeno.xyz/blog</id>
    <title>Hello Web3 Blog</title>
    <updated>2022-12-22T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://omaeno.xyz/blog"/>
    <subtitle>Hello Web3 Blog</subtitle>
    <icon>https://omaeno.xyz/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[solidityにおいてなぜprivateな変数はprivateではないのか]]></title>
        <id>private-variable-in-solidity</id>
        <link href="https://omaeno.xyz/blog/private-variable-in-solidity"/>
        <updated>2022-12-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[結論を言っておきますと、秘密をオンチェーンに乗せるな。private という修飾子も秘密を保持するのに、意味をなさない。]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" src="/assets/images/hffgf-aee4161f7a372ddd7251b9927831f648.gif" width="610" height="640" class="img_ev3q"></p><h1>TL;DR：</h1><p>結論を言っておきますと、秘密をオンチェーンに乗せるな。private という修飾子も秘密を保持するのに、意味をなさない。</p><h1>勘違いしていませんか</h1><p>solidity に触ると、private という修飾子にであうことがあるかと思うんですが、それは時にはプライベートという修飾子をつけてあるので、より秘密性を持っている変数でパスワードとかを保存すればよくね？と勘違いをすると思います。結論からいうと、ブロックチェーンというものは全くと言っていいくらいプライバシーがありませんので、秘密をオンチェーンに保存するのは論外だということです。</p><h1>プライベートな変数を呼び出してみる</h1><p>さて、実演を伴って行きたいので、コードを実際に動かしてみて行きましょうか。</p><p><img loading="lazy" src="/assets/images/hackableson-7231dea48b4d9fd535b7555e3cedde99.gif" width="576" height="431" class="img_ev3q"></p><p>今回の使うレポジトリは<a href="https://github.com/thurendous/private-var" target="_blank" rel="noopener noreferrer">こちら</a>です。</p><p>レポジトリの結果を見たい方はこのようにしましょう。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">git clone https://github.com/thurendous/private-var</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">yarn install</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">yarn hardhat test</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>これで以下のような結果になります。</p><p><img loading="lazy" alt="imageOfTerminalwithResult" src="/assets/images/ScreenShot2022-12-2223.15.42-59dbf7880f8c1c3254087890262418d7.png" width="417" height="153" class="img_ev3q"></p><p>今回使ったディレクトリーは<code>test</code>と<code>contracts</code>のみです。</p><p>その詳細を説明します。</p><p>今回はこんなコントラクトを作ってみました。
中身は至ってシンプルです。</p><ul><li><code>LoginContract</code>というコントラクトを宣言</li><li>private な変数の userName, password を作りました。
この２つの変数をコンストラクタで初期化しています。</li></ul><div class="language-sol codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sol codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// SPDX-License-Identifier: UNLICENSED</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">pragma</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">solidity</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">^</span><span class="token version number" style="color:#36acaa">0.8.9</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Uncomment this line to use console.log</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// import "hardhat/console.sol";</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">contract</span><span class="token plain"> </span><span class="token class-name">LoginContract</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin">bytes32</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> userName</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin">bytes32</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> password</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">bytes32</span><span class="token plain"> _username</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">bytes32</span><span class="token plain"> _password</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        userName </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> _username</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        password </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> _password</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>コントラクトのストレージの単位は <code>slot</code> と言われます。このスロットを実は何らかの方法で読み取ることができるのです。</p><p>続いて、<code>test</code>フォルダを見てください。</p><p>以下のコードが描かれていると思います。</p><ul><li>テストのフォルダは書いたコントラクトのテストをするためのフォルダ</li></ul><p>今回はテストをするというか、ストレージのスロットを読み取ることにします。</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    time</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    loadFixture</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'@nomicfoundation/hardhat-network-helpers'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> anyValue </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'@nomicfoundation/hardhat-chai-matchers/withArgs'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> expect </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'chai'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> ethers </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'hardhat'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">describe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'LoginContract'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// this is the test we run to reveal the private variable</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">it</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'should show us private variable data'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token maybe-class-name">LoginContract</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> ethers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getContractFactory</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'LoginContract'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> userName </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ethers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">utils</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">formatBytes32String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'calvin'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> password </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ethers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">utils</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">formatBytes32String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">'passwordIsMyBigSecret'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> loginContract </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> </span><span class="token maybe-class-name">LoginContract</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">deploy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">userName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> password</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> loginContract</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">deployed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// wait for it to be deployed</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> slot0 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> ethers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">provider</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getStorageAt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            loginContract</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">address</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> slot1 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> ethers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">provider</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getStorageAt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            loginContract</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">address</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> formatUsername </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> ethers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">utils</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">parseBytes32String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">slot0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> formatPassword </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> ethers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">utils</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">parseBytes32String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">slot1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'userName should be -&gt;'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> formatUsername</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'password should be -&gt;'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> formatPassword</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>結構たくさん書かれていますが、少しずつご説明します。</p><p>テストの大きな単位、「LoginContract というテストをするよ」ということを意味します。</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">describe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'LoginContract'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>テストのより小さな単位、文字列の部分は自由に記載して OK。自分が書いたのは「プライベートな値を出してくれるよ」ということを意味する</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token function" style="color:#d73a49">it</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'should show us private variable data'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>コントラクトのクラスを作成します。</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token maybe-class-name">LoginContract</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> ethers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getContractFactory</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'LoginContract'</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>sername</code>, <code>password</code> を作成しておきます。</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> userName </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ethers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">utils</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">formatBytes32String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'calvin'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> password </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ethers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">utils</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">formatBytes32String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'passwordIsMyBigSecret'</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>コントラクトをインスタンス化します。そのときに、コントラクトのコンストラクタに入っている引数、先程作った <code>username</code>, <code>password</code> も代入します。</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> loginContract </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> </span><span class="token maybe-class-name">LoginContract</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">deploy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">userName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> password</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>コントラクトのデプロイを待ちます。</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> loginContract</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">deployed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// wait for it to be deployed</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>続いて、肝心なところです。コントラクトのスロットを読み取ります。ポジションはそれぞれ 0, 1 です。これは<code>userName</code>, <code>password</code>のポジションと同じです。</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> slot0 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> ethers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">provider</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getStorageAt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">loginContract</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">address</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> slot1 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> ethers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">provider</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getStorageAt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">loginContract</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">address</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>読み取った値を整形します。</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> formatUsername </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> ethers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">utils</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">parseBytes32String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">slot0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> formatPassword </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> ethers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">utils</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">parseBytes32String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">slot1</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ターミナルへ表示させます。</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'userName should be -&gt;'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> formatUsername</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'password should be -&gt;'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> formatPassword</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>これで先程の結果の画面が表示されて、読み取られていることがわかりますね。</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  LoginContract</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">userName should be -</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> calvin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">password should be -</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> passwordIsMyBigSecret</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ✔ should show us private variable data </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">668ms</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> passing </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">670ms</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>だから、private な変数だったとしても、秘密なことは何一つねえよ。</p><p><strong>THE END</strong></p>]]></content>
        <author>
            <name>Thurendous</name>
            <uri>https://github.com/thurendous</uri>
        </author>
        <author>
            <name>Polymetis</name>
            <uri>https://github.com/PolymetisOutis</uri>
        </author>
        <category label="private" term="private"/>
        <category label="variable" term="variable"/>
        <category label="solidity" term="solidity"/>
        <category label="変数" term="変数"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[NFT、ERC721とはなんぞや]]></title>
        <id>what-is-ERC721-and-NFT</id>
        <link href="https://omaeno.xyz/blog/what-is-ERC721-and-NFT"/>
        <updated>2022-12-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[-   NFT は非代替性トークンのこと]]></summary>
        <content type="html"><![CDATA[<ul><li>NFT は非代替性トークンのこと</li><li>シンプルにいうとデジタル所有権のこと</li><li>コードで理解しましょう</li></ul><p><img loading="lazy" src="/assets/images/nft-nfts-0d7ff2b6e4905c3b0149cb798f18ace2.gif" width="358" height="640" class="img_ev3q"></p><p>BTC や ETH のようなトークンは FT と呼ばれ、代替性トークンのことです。特徴としては、お互いに交換可能で大きな違いはないことです（厳密には違いもありますが、ここではその議論をしない）。また、アート、コレクション、不動産などのようなお互い違いをかなり持っているようなものは非代替性トークンで代表されることがほとんどです。</p><p>イーサリアムでは EIP721 が提案されて、ERC721 のスタンダードが形成されました。</p><h1>EIP, ERC とは</h1><p>結論：EIP が ERC を含んでいる</p><p>まず、理解しなければならないのは、<a href="https://eips.ethereum.org/EIPS/eip-721" target="_blank" rel="noopener noreferrer">ERC721</a> です。この２つの間にはなんの関係があるのでしょうか。EIP とは、Ethereum Improvement Proposals のことで、イーサリアムコミュニティが提案したプロトコルなどを改善するための提案のことです。EIP はイーサリアムの中の任意の分野の改善で、例えば新たな機能、ERC、プロトコル改善などがあります。</p><p>ERC とは、Ethereum Request For Comment のことで、イーサリアム上の各種アプリケーションのプロトコルとスタンダードのこととなっています。典型的な ERC20, ERC721、あるいは URI のスタンダード ERC67、あるいはウォレットのフォーマット EIP75, EIP85 などがある。</p><p>ERC スタンダードはイーサリアムの発展における重要な構成要素で、ERC20, ERC721, ERC223, ERC777 などのスタンダードがイーサリアムのエコシステムに多大な影響を与えていました。</p><h1>ERC165</h1><p>まず ERC165 について理解しましょう。
スマートコントラクトはインターフェースを宣言して他のスマートコントラクトがチェックするためにやっているのが ERC165 のことです。</p><p>シンプルにいうと、<code>ERC165</code> を通してとあるコントラクトが <code>ERC721</code>, <code>ERC1155</code> をサポートしているかチェックできるという仕組みです。</p><div class="language-sol codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sol codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token class-name">IERC165</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * @dev コントラクトが当該スタンダードの`interfaceId`を実装していればtrueを返す</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * 詳細はこちら：https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     *</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">supportsInterface</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">bytes4</span><span class="token plain"> interfaceId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">view</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">returns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">bool</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>次に実際には ERC721 がどのように <code>supportsInterface()</code>を実現したのか見てみましょう。</p><div class="language-sol codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sol codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">supportsInterface</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">bytes4</span><span class="token plain"> interfaceId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">pure</span><span class="token plain"> override </span><span class="token keyword" style="color:#00009f">returns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">bool</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            interfaceId </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">type</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">IERC721</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">interfaceId </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            interfaceId </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">type</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">IERC165</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">interfaceId</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>この関数<code>supportsInterface</code>は IERC721 あるいは IERC165 の interfaceId が引数として入力された場合に、<code>true</code>を返し、そうでない場合は<code>false</code>を返します。</p><h1>IERC721</h1><p><code>IERC721</code>の中身を見てみましょう。
<code>IERC721</code>は<code>ERC721</code>のインターフェーススタンダードのコントラクトで、ERC721 が実現すべき一般的な関数を定義してます。<code>tokenId</code>を使って非代替性トークンを代表しています。アプルーブあるいはトランスファに際して、<code>tokenId</code>は必ず出番があります。しかし、ERC20 はトランスファにおける数量だけを定義すればよくて、tokenId はありません。</p><div class="language-sol codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sol codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * @dev ERC721スタンダードのインターフェース</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token class-name">IERC721</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">is</span><span class="token plain"> IERC165 </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">event</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Transfer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">address</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">indexed</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">address</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">indexed</span><span class="token plain"> to</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">uint256</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">indexed</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">event</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Approval</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">address</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">indexed</span><span class="token plain"> owner</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">address</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">indexed</span><span class="token plain"> approved</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">uint256</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">indexed</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">event</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">ApprovalForAll</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">address</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">indexed</span><span class="token plain"> owner</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">address</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">indexed</span><span class="token plain"> operator</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">bool</span><span class="token plain"> approved</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">balanceOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">address</span><span class="token plain"> owner</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">view</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">returns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">uint256</span><span class="token plain"> balance</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">ownerOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">uint256</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">view</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">returns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">address</span><span class="token plain"> owner</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">safeTransferFrom</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> to</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">uint256</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">bytes</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">calldata</span><span class="token plain"> data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">safeTransferFrom</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> to</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">uint256</span><span class="token plain"> tokenId</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">transferFrom</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> to</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">uint256</span><span class="token plain"> tokenId</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">approve</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">address</span><span class="token plain"> to</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">uint256</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">setApprovalForAll</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">address</span><span class="token plain"> operator</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">bool</span><span class="token plain"> _approved</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getApproved</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">uint256</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">view</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">returns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">address</span><span class="token plain"> operator</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">isApprovedForAll</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">address</span><span class="token plain"> owner</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">address</span><span class="token plain"> operator</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">view</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">returns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">bool</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h1>IERC721 の event</h1><p>3 つの event を含まれています。<code>Transfer</code>、<code>Approval</code>は ERC20 にも存在します。</p><ul><li><code>Transfer</code>: トークントランスファのときに放出。送り元<code>from</code>、送り先<code>to</code>、<code>tokenId</code>。</li><li><code>Approvel</code>: アプルーブするときに放出。アプルーブする側のアドレス<code>owner</code>、アプルーブした先のアドレス<code>approved</code>、<code>tokenId</code>。</li><li><code>ApprovalForAll</code>: 一気に大量にアプルーブするときに放出するイベント。アプルーブする側のアドレス<code>owner</code>、アプルーブされる側のアドレス<code>operator</code>、アプルーブする場合<code>approved</code>は true で、逆に権限を剥奪する場合、<code>approved</code>は false にする</li></ul><h1>IERC721 関数</h1><ul><li><code>balanceOf</code>: とあるアドレスの持っている NFT の数量を返す</li><li><code>ownerOf</code>: tokenId のオーナーを返す</li><li><code>transferFrom</code>: 普通のトランスファ、引数は <code>from</code> は送り元で、<code>to</code> は送り先、<code>tokenId </code>も必要</li><li><code>safeTransferFrom</code>:安全なトランスファ、もし受ける側はコントラクトの場合、<code>ERC721Receiver</code>の実装が求められる。引数は送り元の<code>from</code>、送り先の<code>to</code>、<code>tokenId</code></li><li><code>approve</code>: 他のアドレスにあなたの NFT を使用する権利を渡す。権利を付与するアドレスは<code>approve</code>、そして<code>tokenId</code></li><li><code>getApproved</code>: <code>tokenId</code>がどのアドレスに権限を付与したのか確認する</li><li><code>setApprovalFroAll</code>: 自分の持っているこのコントラクトのすべての NFT をとあるアドレスに対して全権移譲する</li><li><code>isApprovedForAll</code>: 全権移譲しているアドレスがあるか確認する</li><li>safeTransferFrom<code>: 安全なトランスファ関数のオーバーライド関数、引数に</code>data`が含まれている</li></ul><h1>IERC721Receiver</h1><p>コントラクトがもし ERC721 の実現をしていない場合、送られてきた NFT はブラックホールに送ったように、永遠に取り出せなくなります。これを防止するために、ERC721 は<code>safetransferFrom()</code>関数を実装している。ターゲットコントラクトが<code>IERCReceiver</code>インターフェースを実装している場合のみ、ERC721 トークンを受け取ることができます。そうでない場合は<code>revert</code>されます。IERC721Receiver インターフェースは一個の<code>onERC721Receiver()</code>関数しかありません。</p><div class="language-sol codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sol codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// ERC721Receiverのインターフェース：　コントラクトはこれを実装して安全なトランスファを受けることができる</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token class-name">IERC721Receiver</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">onERC721Received</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> operator</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">uint</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">bytes</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">calldata</span><span class="token plain"> data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">returns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">bytes4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>次に<code>ERC721</code>がどうやって<code>_checkOnERC721Received</code>を使ってコントラクトが<code>onERC721Receiver()</code>関数を実装していることを確認しているのを見てみましょう。</p><div class="language-sol codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sol codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_checkOnERC721Received</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> to</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">uint</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">bytes</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">memory</span><span class="token plain"> _data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">returns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">bool</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">to</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">isContract</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token function" style="color:#d73a49">IERC721Receiver</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">to</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">onERC721Received</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    msg</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sender</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token keyword" style="color:#00009f">from</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    tokenId</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    _data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> IERC721Receiver</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">onERC721Received</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">selector</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h1>IERC721Metadata</h1><p>IERC721Metadata は ERC721 の拡張インターフェイス。３つの metadata 用関数を用いている。</p><ul><li><code>name()</code>：トークン名を返す</li><li><code>symbol()</code>:トークン符号</li><li><code>tokenURI()</code>:tokenId を使って metadata の url をとってくる。ERC721 特有の関数</li></ul><div class="language-sol codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sol codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token class-name">Ierc721Metadata</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">is</span><span class="token plain"> IERC721 </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">name</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">view</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">returns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">string</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">memory</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">symbol</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">view</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">returns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">string</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">memory</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">tokenURI</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">uint256</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">view</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">returns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">string</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">memory</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h1>ERC721 メインコントラクト</h1><p><code>ERC721</code> メインコントラクトは <code>IERC721</code>, <code>IERC165</code>, <code>IERC721Metadata</code> のすべての機能を定義した。4 つの状態変数、17 個の関数を含まれている。シンプルに実装されている。詳細はコメントを読んでください。</p><div class="language-sol codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sol codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// SPDX-License-Identifier: MIT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// by 0xAA</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">pragma</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">solidity</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">^</span><span class="token version number" style="color:#36acaa">0.8.4</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./IERC165.sol"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./IERC721.sol"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./IERC721Receiver.sol"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./IERC721Metadata.sol"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./Address.sol"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">　</span><span class="token comment" style="color:#999988;font-style:italic">// library</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./String.sol"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// library</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">contract</span><span class="token plain"> </span><span class="token class-name">ERC721</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">is</span><span class="token plain"> IERC721</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> IERC721Metadata</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">using</span><span class="token plain"> </span><span class="token class-name">Address</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token builtin">address</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Address libraryを使う（isContractを使うため）</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">using</span><span class="token plain"> </span><span class="token class-name">Strings</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token builtin">uint256</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// String library</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Token名</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin">string</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> override name</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Tokenシンボル</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin">string</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> override symbol</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// tokenId -&gt; owner address のマッピング</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">mapping</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">uint</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token builtin">address</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> _owners</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// address -&gt; バランスのマッピング</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">mapping</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">address</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token builtin">uint</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> _balances</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// tokenID -&gt; アプルーブされたアドレスのマッピング</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">mapping</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">uint</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token builtin">address</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> _tokenApprovals</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//  owner -&gt; operatorアドレス -&gt; bool（権限渡した場合はtrue）</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">mapping</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">address</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">mapping</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">address</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token builtin">bool</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> _operatorApprovals</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * constructor, name, symbolを初期化する</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">string</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">memory</span><span class="token plain"> name_</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">memory</span><span class="token plain"> symbol_</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> name_</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        symbol </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> symbol_</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// ERC165のsupportsInterface関数</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">supportsInterface</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">bytes4</span><span class="token plain"> interfaceId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">pure</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">returns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">bool</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            interfaceId </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">type</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">IERC721</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">interfaceId </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            interfaceId </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">type</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">IERC165</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">interfaceId </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            interfaceId </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">type</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">IERC721Metadata</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">interfaceId</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// IERC721のbalanceOf関数、_balancesを使って調べたいアドレスの残高を返す</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">balanceOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">address</span><span class="token plain"> owner</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">view</span><span class="token plain"> override </span><span class="token keyword" style="color:#00009f">returns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">uint</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">owner </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token builtin">address</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"owner = zero address"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> _balances</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">owner</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// IERC721のownerOf関数、_owners変数を使ってtokenIdのownerを返す</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">ownerOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">uint</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">view</span><span class="token plain"> override </span><span class="token keyword" style="color:#00009f">returns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">address</span><span class="token plain"> owner</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        owner </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> _owners</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">tokenId</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">owner </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token builtin">address</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"token doesn't exist"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// IERC721のisApprovedForAll、_operatorApprovals変数を</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 使ってownerがoperatorに権限を移譲したかどうかをチェックする。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 権限移譲した場合はtrueを返す</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">isApprovedForAll</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">address</span><span class="token plain"> owner</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">address</span><span class="token plain"> operator</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">view</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">returns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">bool</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> _operatorApprovals</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">owner</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">operator</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// IERC721のsetApprovalForAllを実装。持っているトークンをすべてoperatorに権限を渡す(true),</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// あるいはoperatorの権限を剥奪する(false)。_setApprovalForAll関数を呼び出す。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">setApprovalForAll</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">address</span><span class="token plain"> operator</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">bool</span><span class="token plain"> approved</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"> override </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        _operatorApprovals</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">msg</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sender</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">operator</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> approved</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">emit</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">ApprovalForAll</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">msg</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sender</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> operator</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> approved</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 实现IERC721的getApproved，利用_tokenApprovals变量查询tokenId的授权地址。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getApproved</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">uint</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">view</span><span class="token plain"> override </span><span class="token keyword" style="color:#00009f">returns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">address</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_owners</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">tokenId</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token builtin">address</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"token doesn't exist"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> _tokenApprovals</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">tokenId</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// _approve関数。_tokenApprovalsを書き換えて，toアドレスに tokenIdをいじる権限を渡す。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Approvalイベントを放出。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_approve</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> owner</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> to</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">uint</span><span class="token plain"> tokenId</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        _tokenApprovals</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">tokenId</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> to</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">emit</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Approval</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">owner</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> to</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// IERC721のapprove関数，tokenIdの権限を to アドレスに渡す。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 条件：toはownerではないこと，かつmsg.senderはownerあるいはapproveされたアドレス。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// _approve関数を呼び出す</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">approve</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">address</span><span class="token plain"> to</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">uint</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"> override </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> owner </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> _owners</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">tokenId</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            msg</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sender </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> owner </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> _operatorApprovals</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">owner</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">msg</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sender</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"not owner nor approved for all"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">_approve</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">owner</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> to</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//  spenderアドレスがtokenIdを使う権限があるかないかを調べる。（あるのはownerか</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// approveされたかのいずれだ。approveされた場合は通常のapproveあるいは</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// setApprovalForAllの2パターン）</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_isApprovedOrOwner</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> owner</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> spender</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">uint</span><span class="token plain"> tokenId</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">view</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">returns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">bool</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">spender </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> owner </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            _tokenApprovals</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">tokenId</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> spender </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            _operatorApprovals</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">owner</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">spender</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">/*</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * トランスファ関数。_balances、_ownerのバランスを調整して tokenId を from から toに</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * トランスファする。同時にTransferイベントを放出。</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * 前提条件:</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * 1. tokenId は from によって所有されている</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * 2. to はゼロアドレスでない</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * 条件を満たさない場合はrevert</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_transfer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> owner</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> to</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">uint</span><span class="token plain"> tokenId</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> owner</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"not owner"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">to </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token builtin">address</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"transfer to the zero address"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">_approve</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">owner</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">address</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// トランスファするので権限をリセットする</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        _balances</span><span class="token punctuation" style="color:#393A34">[</span><span class="token keyword" style="color:#00009f">from</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        _balances</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">to</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        _owners</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">tokenId</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> to</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">emit</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Transfer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">from</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> to</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// IERC721のtransferFrom関数の実装，セーフトランスファではないので、</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// この関数を使うのは推奨されていない。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">transferFrom</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> to</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">uint</span><span class="token plain"> tokenId</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"> override </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> owner </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">ownerOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">tokenId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token function" style="color:#d73a49">_isApprovedOrOwner</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">owner</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> msg</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sender</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"not owner nor approved"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">_transfer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">owner</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> to</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * セーフトランスファ，安全にtokenIdをfromからtoへトランスファする。スマートコントラクトが</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * erc721に対応しているかどうかをチェックした上で、トランスファをするので、NFTが永遠に</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * ロックされる実態を回避する。_transfer、_checkOnERC721Received関数を呼び出す。</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * 条件：</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * from はゼロアドレスではない</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * to はゼロアドレスではない</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * tokenId が存在してしかもfromアドレスが所有</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * toがスマートコントラクトの場合、必ずIERC721Receiver-onERC721Receivedをサポートされる</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * ことが求められる</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_safeTransfer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> owner</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> to</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">uint</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">bytes</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">memory</span><span class="token plain"> _data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">_transfer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">owner</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> to</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">_checkOnERC721Received</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">from</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> to</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> _data</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"not ERC721Receiver"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * IERC721のsafeTransferFromを実装。セーフトランスファ関数，_safeTransfer関数を呼び出している</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">safeTransferFrom</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> to</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">uint</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">bytes</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">memory</span><span class="token plain"> _data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> override </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> owner </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">ownerOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">tokenId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token function" style="color:#d73a49">_isApprovedOrOwner</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">owner</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> msg</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sender</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"not owner nor approved"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">_safeTransfer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">owner</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> to</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> _data</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// safeTransferFromのオーバライド関数、引数が違う</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">safeTransferFrom</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> to</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">uint</span><span class="token plain"> tokenId</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"> override </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">safeTransferFrom</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">from</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> to</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * mint関数。_balances、_ownersのバランスをいじることで、tokenIdをtoへトランスファする。</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * 同時にTransferイベントを放出する。</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * 現在の状態では、誰でもミントできるので、開発者は普通この関数を書き換える</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * 条件:</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * 1. tokenIdがまだ存在しない</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * 2. toはゼロアドレスでない</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_mint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">address</span><span class="token plain"> to</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">uint</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">internal</span><span class="token plain"> virtual </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">to </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token builtin">address</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"mint to zero address"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_owners</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">tokenId</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token builtin">address</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"token already minted"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        _balances</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">to</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        _owners</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">tokenId</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> to</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">emit</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Transfer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">address</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> to</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// バーン関数，_balances、_owners変数を調整してtokenIdをバーンする。同時にTransferイベントを放出</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 条件：tokenId存在。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_burn</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">uint</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">internal</span><span class="token plain"> virtual </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> owner </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">ownerOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">tokenId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">msg</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sender </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> owner</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"not owner of token"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">_approve</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">owner</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">address</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 権限を更新</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        _balances</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">owner</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">delete</span><span class="token plain"> _owners</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">tokenId</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">emit</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Transfer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">owner</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">address</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// _checkOnERC721Received：IERC721Receiver-onERC721Received関数, 送り先はERC721互換かどうかをチェックするため</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_checkOnERC721Received</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> to</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">uint</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">bytes</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">memory</span><span class="token plain"> _data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">returns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">bool</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">to</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">isContract</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token function" style="color:#d73a49">IERC721Receiver</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">to</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">onERC721Received</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    msg</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sender</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token keyword" style="color:#00009f">from</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    tokenId</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    _data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> IERC721Receiver</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">onERC721Received</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">selector</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * IERC721MetadataのtokenURI関数，metadataを返す</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">tokenURI</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">uint256</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">view</span><span class="token plain"> virtual override </span><span class="token keyword" style="color:#00009f">returns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">string</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">memory</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_owners</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">tokenId</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token builtin">address</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Token Not Exist"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">string</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">memory</span><span class="token plain"> baseURI </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_baseURI</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token builtin">bytes</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">baseURI</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">abi</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">encodePacked</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">baseURI</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * {tokenURI}のBaseURI。tokenURIはbaseURI、tokenIdをつないでできたもの。</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * 開発者がこの関数を書きかえる</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * 例えばBAYCのbaseURIはipfs://QmeSjSinHpPnmXmspMjwiXyN6zS4E9zccariGR3jxcaWtq/</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_baseURI</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">internal</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">view</span><span class="token plain"> virtual </span><span class="token keyword" style="color:#00009f">returns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">string</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">memory</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h1>free mint の APE を作ろう</h1><p>それでは、free mint の APE を作りましょうか。totalSupply を 10000 個にして、mint 関数や baseURI を書き換えるだけで済みます。</p><p>baseURI()の設定を BAYS と全く同じようにすることで、BAYC の猿が表示されるはずです。</p><div class="language-sol codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sol codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// SPDX-License-Identifier: MIT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// by 0xAA</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">pragma</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">solidity</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">^</span><span class="token version number" style="color:#36acaa">0.8.4</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./ERC721.sol"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">contract</span><span class="token plain"> </span><span class="token class-name">OmaenoApe</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">is</span><span class="token plain"> ERC721</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin">uint</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> MAX_APES </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10000</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 総数</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// コンストラクタ</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">string</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">memory</span><span class="token plain"> name_</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">memory</span><span class="token plain"> symbol_</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">ERC721</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">name_</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> symbol_</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//BAYCのbaseURIはipfs://QmeSjSinHpPnmXmspMjwiXyN6zS4E9zccariGR3jxcaWtq/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_baseURI</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">internal</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">pure</span><span class="token plain"> override </span><span class="token keyword" style="color:#00009f">returns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">string</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">memory</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"ipfs://QmeSjSinHpPnmXmspMjwiXyN6zS4E9zccariGR3jxcaWtq/"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// mint関数</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">mint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">address</span><span class="token plain"> to</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">uint</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">tokenId </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> tokenId </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> MAX_APES</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"tokenId out of range"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">_mint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">to</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tokenId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>それでは remix を開いてコードを書きましょう。</p><h1>ERC721 を発行しよう</h1><p>ERC721 スタンダードがあれば、ブロックチェーンにて NFT を発行することは非常にシンプルになります。
今、上記のコードができたので、remix にて発行しましょう。</p><p>実際の手順はまたの機会で書きます。</p><h1>ERC165 と ERC721</h1><p>NFT を NFT についてコントロールできないコントラクトへ送付してしまうと、永遠に消失してしまうため、これを防ぐために<code>ERC721TokenReceiver</code>インターフェイスの実装が求められます。</p><div class="language-sol codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sol codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token class-name">ERC721TokenReceiver</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">onERC721Received</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">address</span><span class="token plain"> _operator</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">address</span><span class="token plain"> _from</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">uint256</span><span class="token plain"> _tokenId</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">bytes</span><span class="token plain"> _data</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">returns</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">bytes4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>実はこのインターフェイスとは、この <code>onERC721REceived</code> 関数のことです。この関数を実装していれば、NFT を処理する能力があるという宣言になります。</p><p><strong>THE END</strong></p><p><img loading="lazy" src="/assets/images/ethereum-eth-e79389c064d88fe1afc443c10c074467.gif" width="498" height="491" class="img_ev3q"></p>]]></content>
        <author>
            <name>Thurendous</name>
            <uri>https://github.com/thurendous</uri>
        </author>
        <author>
            <name>Polymetis</name>
            <uri>https://github.com/PolymetisOutis</uri>
        </author>
        <category label="ERC721" term="ERC721"/>
        <category label="NFT" term="NFT"/>
        <category label="solidity" term="solidity"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Web3 Term Dictionary]]></title>
        <id>web3-term-dictionary</id>
        <link href="https://omaeno.xyz/blog/web3-term-dictionary"/>
        <updated>2022-09-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Web3流行語]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="web3流行語">Web3流行語<a class="hash-link" href="#web3流行語" title="見出しへの直接リンク">​</a></h2><p>「gm って何」とよく聞かれるので、Web3 の流行語を日本語でまとめて簡単に調べられるようにして、Web3 の言語文化を広めていってわかりやすくなったらいいなと思って作りました。
web3 業界へのハードルが下がって、もっとたくさんの人が参加できるようになって盛り上げていければ良いなと思っています。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="a">A<a class="hash-link" href="#a" title="見出しへの直接リンク">​</a></h3><p>ABI: Application Binary Interface は、API と似ていて 2 つのバイナリプログラムモジュール間のインターフェイスのこと</p><p>address: ウォレット/コントラクトのアドレス</p><p>Alpha：アルファ、すごい収益のチャンスのこと。</p><p>AMA：Ask Me Anything、「なんでも聞いてください」のイベントで、プロジェクト側が実施する一般参加者の質問への回答を行うイベントのこと</p><p>AMM：Autonomous Market Making の略で、自動的に行われるマーケットメイキング、分散型取引所における共通技術</p><p>ape: All in すること、すべてを賭けてやる</p><p>ATH：All Time High、史上最高値のこと</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="b">B<a class="hash-link" href="#b" title="見出しへの直接リンク">​</a></h3><p>Blockchain：ブロックチェーン</p><p>Bridge：クロスチェーンのブリッジ、異なるパブリックチェーン上のアセットを接続するためのアプリケーション。複雑さがゆえに脆弱性がよく発見される</p><p>Buy the fucking dip：仮想通貨を安い値段で拾う（買う）こと</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="c">C<a class="hash-link" href="#c" title="見出しへの直接リンク">​</a></h3><p>CeFi：Centralized Finance の略で、DeFi の逆</p><p>Cex: Centralized Exchange（セントラル・エクスチェンジ）で、Binance、Coincheck などの取引所</p><p>ctf: Capture The Flag、サイバーセキュリティの技術コンテスト。</p><p>chad： すごい人（一般的には男性）</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="d">D<a class="hash-link" href="#d" title="見出しへの直接リンク">​</a></h3><p>DAO: Decentralized Autonomous Organization（分散型自律組織）</p><p>Dapp：分散型アプリケーション、Decentralized Application の略</p><p>DeFi: Decentralized Finance（分散型金融）の略</p><p>degen：ギャンブル中毒者でやたらと ape in する人</p><p>delist: リスティングから除外すること</p><p>DeSci: Decentralized Science、<a href="https://note.com/hirotaiyohamada/n/n82e5c7d22c31" target="_blank" rel="noopener noreferrer">分散型サイエンス</a>。</p><p>DeSoc：分散型社会、Decentralized Society</p><p>Dex：Decentralized Exchange、分散型取引所</p><p>Diamond hands：ダイヤモンドハンド、トークン/NFT を長期に渡って保有できる人</p><p>DID: Decentralized Identity（分散型アイデンティティ）</p><p>discord：コミュニティのための共通情報発信プラットフォーム（ラインににているがコミュニティに特化している）</p><p>dm: ダイレクトメッセージ、プライベートメッセージ</p><p>DYOR：Do Your Own Research（自分で調べて自分で責任をとれ）</p><p>Due diligence：デューディリジェンス（投資を行うにあたって投資対象となる企業や投資先の価値やリスクなどを調査する適正な努力のこと）</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="e">E<a class="hash-link" href="#e" title="見出しへの直接リンク">​</a></h3><p>EOA: Externally Owned Accounts、イーサリアムネットワークの個々のユーザーで、スマートコントラクトのアドレスではないこと、普通のウォレットのこと</p><p>ERC20：Ether 上のトークンを均質化するための規格</p><p>ERC721: Ether 上の非均質なトークン規格。</p><p>Ethereum：分散型オープンソースブロックチェーンネットワークであるイーサ、およびそのネイティブトークンの名称。</p><p>EVM：Ethereum Virtual Machine の略で、ブロックチェーン開発者がイーサリアムブロックチェーン上に分散型アプリケーション（Dapp）を展開するために使用するソフトウェアアプリケーションです。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="f">F<a class="hash-link" href="#f" title="見出しへの直接リンク">​</a></h3><p>FT：ファンジブルトークン</p><p>fam：家族のこと</p><p>floor price：フロアプライス、スタートの価格のこと</p><p>fren：friend，友達、友</p><p>Fomo：Fear of Missing Out、機会を逃すことが怖くて盲目的に ape in すること</p><p>Fud：Fear（恐怖）、Uncertainty（不確実性）、Doubt（疑い）で、市場の悪い面を煽る情報</p><p>FYI：for your information（ご参考までに）</p><p>Full Send：パワー全開で</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="g">G<a class="hash-link" href="#g" title="見出しへの直接リンク">​</a></h3><p>gas：ガス、ブロックチェーン上で取引を完了させるために必要なガスのこと</p><p>gas fee：ガス代、ブロックチェーン上で取引を完了するために必要なガス代（単位は ETH）→ (gas fee) = gas × (gas price)</p><p>gas limit：1 回の取引で消費できるガスの最大値</p><p>gas price：ブロックチェーンにおけるガスの単位あたりの価格</p><p>gas war：人気プロジェクトによるガス代の高騰。</p><p>gm：おはようございます。web3 における日常的な挨拶</p><p>gn：おやすみなさい</p><p>gg：グッドゲーム、ゲーム仲間がよく使う挨拶</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="h">H<a class="hash-link" href="#h" title="見出しへの直接リンク">​</a></h3><p>hacked: ハッキングされた</p><p>HODL：hodl on dear love、ダイヤモンドハンド、長期に渡ってホールドすること</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="i">I<a class="hash-link" href="#i" title="見出しへの直接リンク">​</a></h3><p>IRL：In Real Life の略</p><p>ifykyk: わかる人にはわかる</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="l">L<a class="hash-link" href="#l" title="見出しへの直接リンク">​</a></h3><p>layer2: 既存のパブリックチェーンの上に構築されたレイヤー 2 のフレームワークで、通常はレイヤー１より高速で安価なトランザクションを発行でき、より UX がよい</p><p>LFG：Let's Fucking Go！Ape in すること</p><p>LGTM：Looking good to me, 見た感じはいいね</p><p>liquidity： 流動性</p><p>LMAO：クソ笑った</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="m">M<a class="hash-link" href="#m" title="見出しへの直接リンク">​</a></h3><p>maxi：マクシ、何かをものすごい信仰している人</p><p>meme：ミーム、ネタ画像など</p><p>Mempool: トランザクションバッファプール。トランザクションが送信された後に mempool には表示されるが、まだチェーン上にのっていない状態</p><p>Merkle Tree：ブロックチェーンが大規模なデータセットを安全に検証・集約するために使用するデータ構造。</p><p>MEV：Miner Extractable Value または Maximal Extractable Value の略で、ブロック内のトランザクションを含めたり、除外したり、並び替えたりすることでマイナーが得ることのできる利益のこと</p><p>Mint：Mint NFT/ERC20、ミントする、鋳造する</p><p>Moon：価格が急騰して月まで飛ぶ、to the moon</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="n">N<a class="hash-link" href="#n" title="見出しへの直接リンク">​</a></h3><p>nfa: Not Financial Advice、「フィナンシャルアドバイスではありません」</p><p>NFT: Non-Fungible Token、ノンファンジブルトークンです。</p><p>ngmi: not gonna make it, 「だめだ、うまくいかない」</p><p>Noob：ルーキー、新人、くそ素人</p><p>Nonce: 重複を防ぐためにイーサリアム取引に関連付けられた番号で、各取引に 1 つずつ追加される。各 Nonce は 1 度だけ使用できる</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="o">O<a class="hash-link" href="#o" title="見出しへの直接リンク">​</a></h3><p>OG：Original Gangster、古参の人</p><p>on-chain：オンチェーン、ブロックチェーンにのっている</p><p>off-chain：オンチェーンではなく、オフチェーン、ブロックチェーンにのっていない</p><p>optimistic rollups: イーサリアムの layer2 のソリューションの一つ</p><p>oracle：<a href="https://zenn.dev/jpyc/articles/a8b3710676c433" target="_blank" rel="noopener noreferrer">オラクル</a>、非中央集権的にデータをオンチェーンに持ってこれる何か</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="p">P<a class="hash-link" href="#p" title="見出しへの直接リンク">​</a></h3><p>paper hands: ダイヤモンドの手の反対語で、全くホールドできない人</p><p>pfp: プロフィール画像</p><p>PoS：Proof of Stake の略で、参加者は POW のコンピューティングパワーの代わりにトークンの staking によってブロックチェーンネットワークの正常な機能を維持させる</p><p>PoW：Proof of Work（プルーフ・オブ・ワーク）の略で、参加者がコンピューティングパワーとエネルギーを消費してブロックチェーン・ネットワークの正常な機能を維持させる</p><p>prolly nothing: Probbably Nothing、「何も起こらないかもだけど」</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="r">R<a class="hash-link" href="#r" title="見出しへの直接リンク">​</a></h3><p>ReFi：Regenerative Finance、再生可能・持続可能な金融。</p><p>rekt：大破、終了、破産、ゲームオーバー</p><p>roadmap：ロードマップ</p><p>RT：Twitter をリツイートする</p><p>rug：ラグプール、逃げる／ゼロになる、プロジェクト側が全ての資金を抜き取って終了する</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="s">S<a class="hash-link" href="#s" title="見出しへの直接リンク">​</a></h3><p>Sandwich Attack：サンドイッチ攻撃、mempool でトランザクションは誰でも確認することができることから、被害者はオンチェーンで購入注文を出すと、攻撃者はそれを利用して被害者の購入注文の前後に取引を仕掛けて被害者に効率の悪い取引を強いて、利益を取ろうとする攻撃のこと。こういうことがあることから、オンチェーンの世界は弱肉強食のブラックフォレストとも呼ばれている</p><p>SBT：Soulbound Token、魂が宿ったトークン、つまりあなたの魂とバンドルとなって取引できない NFT のこと、ただし、自分は自分の SBT を burn できる</p><p>shilling: マーケティングする、営業する</p><p>Smart Contracts：ブロックチェーン上で動作するスマートコントラクトのことで、通常は一旦デプロイすると、止められることはない</p><p>solidity: イーサリアム上でスマートコントラクトを記述するための言語</p><p>Send it: 了解</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="t">T<a class="hash-link" href="#t" title="見出しへの直接リンク">​</a></h3><p>Tokenomics：トークンエコノミー</p><p>tradfi: 伝統的な金融システムのこと</p><p>TVL: Total Value Locked、プロトコルにロックされた資金の合計</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="u">U<a class="hash-link" href="#u" title="見出しへの直接リンク">​</a></h3><p>Up Only：価格が上がり続ける（大体は皆の理想な願望なだけ）</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="w">W<a class="hash-link" href="#w" title="見出しへの直接リンク">​</a></h3><p>wagmi：We are gonna make it, 私達は必ず成功する。 また、多くの共通フックを含んだ web3 react フロントエンドライブラリの名前でもある → これはおもしろい</p><p>wallet：ウォレット</p><p>web3.0: Web1.0 や Web2.0 とは対照的なもので、分散化、非中央集権化とデジタル所有権によって特徴づけられるインターネットのこと</p><p>wen：いつ？</p><p>wen token：いつエアドロすんの？</p><p>WETH：Wrapped Ethereum、イーサリアムトークンの ERC20 バージョン</p><p>whale：くじら、大量のお金・トークンを保有する人</p><p>WL：White list、ホワイトリスト。特権のあるユーザー群のこと</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="z">Z<a class="hash-link" href="#z" title="見出しへの直接リンク">​</a></h3><p>zk: zero-knowledge proof, ゼロ知識証明のこと、誰かがある秘密をしっていることを、その秘密自体を明かさずに証明できる</p>]]></content>
        <author>
            <name>Thurendous</name>
            <uri>https://github.com/thurendous</uri>
        </author>
        <author>
            <name>Polymetis</name>
            <uri>https://github.com/PolymetisOutis</uri>
        </author>
        <category label="ブロックチェーン" term="ブロックチェーン"/>
        <category label="Web3" term="Web3"/>
        <category label="about" term="about"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why Crypto is the Future]]></title>
        <id>why-crypto-is-the-future</id>
        <link href="https://omaeno.xyz/blog/why-crypto-is-the-future"/>
        <updated>2022-09-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Crypto is the future]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="crypto-is-the-future">Crypto is the future<a class="hash-link" href="#crypto-is-the-future" title="見出しへの直接リンク">​</a></h2><p>結論から言います。ぼくはクリプトが未来だと考えています。</p><p>その理由を語るには、結構な労力と時間が必要なのかもしれませんが、言語化することによって、自分の頭の整理にもなるので、ここで僕はそれに挑戦したいと思います。</p><p>少し想像してみてくださいね。</p><blockquote><p>現実世界のどんなものでも（サービス、不動産、債権、キャッシュ、買い物、国債、ゴールド、ホテルのいち日泊まる権利、などなどありとあらゆるもの）、また、バーチャル世界にあるどんなものでも（ゲームアイテム、音楽、バーチャル世界の土地、ゲームキャラのスキンなどなど）、インターネット上でボーダレスにミドルマンなしで、オープンに公平に取引ができる時代</p><p>国境など関係なしにスムーズに多文化多言語協力関係の組織を築けて、そして報酬を直接的に自分のアカウントでもらえる。なにか没頭できるようなことに関してグローバルに募集して組織を一瞬に作って何かをやったり、収益化できたり</p></blockquote><p>これが僕が考えたブロックチェーンの近未来です。もちろん、様々な壁やハードルが立ちはだかっているのは間違いないです。けれど、それが何年かかるかわかりませんが、近いうちそれに近い形態になると思います。なぜなら、そういったインフラはすでにできてきて改善もどんどんされていっている時代なので、そうなっていくのは目に見えたからです。</p><p>また、自分が考えた世界に比べて実際にはもっと進んでいる可能性が結構高いと思います。なぜかというと、人間は線形的に物事を考えがちであり、今の状況がよりよい状況になるという想像しかできません。実際には今では考えたことのない状況になったりするのもあり得ます。自分が想像力に欠けるのも無理はありません。ただ、現時点に基づいて予測をしないと何も始まりませんよね。</p><p>結果を言ったのはいいけど、なんでそうなるんだ？と思うと思いますので、ここから述べていきます。言いたいことが山程あるので、記事はシリーズ化します。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="リアルからバーチャルへ">リアルからバーチャルへ<a class="hash-link" href="#リアルからバーチャルへ" title="見出しへの直接リンク">​</a></h2><p>大きな理由としては、人間社会はリアルからバーチャルへ遷移していることが大きな理由です。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="metaverse">Metaverse<a class="hash-link" href="#metaverse" title="見出しへの直接リンク">​</a></h3><p>最近だと、メタバースというワードがかなり耳に入ってくる様になったのではないでしょうか。メタバースと聞くと、わけがわからないのかもしれませんが、自分の理解ですと、このワードはまだ意味が定まっていないと思います。あえて意見を言わせてもらうと、メタバースはいわゆるバーチャル世界そのものの定義になります。誰でも作れますし、すでにあるインターネットそのものも広義的にメタバースなのです。</p><p>例えば、すでに僕達のグーグルアカウントあるいはイーサリアムウォレットのアカウントとかがメタバースの僕達の分身と理解してもよいでしょう。ただ、このメタバースはまだまだ初歩的な段階なので、本当に使えるバーチャル世界と言えるのかというところが確かにあります。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="software-is-eating-the-world">"Software is eating the world"<a class="hash-link" href="#software-is-eating-the-world" title="見出しへの直接リンク">​</a></h3><p>英語圏ではとても有名な言葉があります。それはこの「Software is eating the world. (ソフトウェアは世界を飲み込んでいる)」という言葉です。</p><p>これは 2011 年に A16Z というとても先進的な視野を持つ<a href="https://a16z.com/2011/08/20/why-software-is-eating-the-world/" target="_blank" rel="noopener noreferrer"> VC のファンダーが話した言葉</a>です。その後の世界はご存知の通り、彼が言った通りになり、ソフトウェアは世界を飲み込んでいきました。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="companies-market-cap-ranking">Companies' market cap ranking<a class="hash-link" href="#companies-market-cap-ranking" title="見出しへの直接リンク">​</a></h3><p><img loading="lazy" src="/assets/images/worldranking1989-2022-546b078b20e88b1202c0795f9d58f4a0.png" width="1250" height="1108" class="img_ev3q"></p><p>上の画像でわかるように、その過程では世界時価総額ランキングの上位はほとんどインターネット企業、いわゆる FANG または GAFA と呼ばれる企業に独占されるようになりました。</p><p>一昔前日本企業があれだけ独占していたランキングですが、日本がインターネットの波を完全に逃したせいで、今やランキングの下位となっています。アメリカの企業がほとんどで、たまに中国や韓国の企業が現れて、31 位になって初めてトヨタが出てきています。世の中の時流はものづくり時代からインターネット時代になったということです。</p><p>こういった企業のサービスを使ったことがある方はわかると思いますが、とても役に立っていて、一度使うとなかなかそのエコシステムから抜け出せなくなります。このように、ソフトウェアが世界を飲み込んでいます。しかし、これでは終わらないのです。</p><p>これは見方を変えると、人類がバーチャル世界へ進んだ第一歩に過ぎず、まだまだ道のりは長いです。現在こういった大企業が作っている初歩的な「メタバース」の世界はこれはこれでインフォメーションをデジタル化することに成功していますが、まだお金というものは現実世界から切り離した形でデジタル化できていません。（例えば paypay とかはお金と同等なように思われますが、独立した形でお金というものではなく、結局は日本円の分身であり、paypay の運用会社に大きく依存した形です → 運用会社はその世界の神様です）</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="神様のいない非中央集権的な世界">神様のいない（非中央集権的な）世界<a class="hash-link" href="#神様のいない非中央集権的な世界" title="見出しへの直接リンク">​</a></h3><p>ブロックチェーンはこれを解決してくれます。ブロックチェーンは今のインターネットにおけるなんでもコピーできてしまう問題を解決し、バーチャルなものにリアル世界と同じような誰にも関与されない希少性、改ざん耐性を与えて、初めてバーチャル世界を「世界」として成り立たせることができるのです。先程、神様といったのは例えばあなたの生きる世界に神様がどこかの人間になると、怖くありませんか？その人の決定で何もかも変わる可能性があります。極端な話、生存の権利さえも奪われるリスクが潜んでいます。そんな世界ってディストピアで嫌ですよね？</p><p>すでに気づいてるかと思いますが、今僕達はまさにこの神様がいる（中央集権的な）インターネット世界に住んでいます。youtuber さんはわけがなくチャンネル停止されるし、アマゾンでは明確な理由が与えられず出店停止処分になったりします。ツイッターだってトランプさんのアカウントがバンされたことで有名でしたね。</p><p>もちろん、悪さをしてバンされたらそれはそれで仕方ないのですが、ただ会社側の一任ですべてが決定されてしまうのは果たして正義なのかどうかは議論の余地があるのではないでしょうか？</p><p>実際にイーサリアムの創始者であるビタリック氏はワールドオブワークラフトの MMO ゲーム内の好きなキャラクタが弱体化されたことで嫌気が差したのがイーサリアムというブロックチェーンの始まりだとも言われています。神様のいない世界は人類史上なかったので、さぞかしビタリック氏は作りたかったんだろうね。</p><p>ブロックチェーンであれば、神様のいない世界が作れるという点が非常に大きいです。これによって万人平等で同じルールに則った世界が構築できる様になったといえます。</p><p>ただ、今はこの大きな課題解決の現在進行系であり、あれやこれの不具合や満足の行かない点がたくさんあるでしょう。</p><p>そういったときには、僕の意見としては未来志向がいいです。未来志向は何かというと、クレーマーにならず暖かく見守ってあげて一緒に成長するのがベストだと思います。クレーマーになるのは簡単であり、課題を解決する側に回って色々考えて行動することこそ社会が進化していく力となっていくので、結局はみんなウィンウィンになるわけです。</p><p>話がそれましたが、人間社会はリアルからバーチャルへという大きな方向性は間違いがなく、すでに自分たちの活動はたくさんインターネットへ移植しています。これが加速していきます。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="human-societys-gdp">Human society's GDP<a class="hash-link" href="#human-societys-gdp" title="見出しへの直接リンク">​</a></h3><p><img loading="lazy" src="/assets/images/human_history_GDP-4ae79460b009b655e43401b84ee2248a.png" width="1000" height="557" class="img_ev3q">
<em><a href="https://www.weforum.org/agenda/2017/09/over-2000-years-of-economic-history-in-one-chart" target="_blank" rel="noopener noreferrer">出典</a></em></p><p>人類の歴史における 一人当たりの GDP は上のグラフを見て下さい。わかるかと思いますが、指数関数的に増加していることがわかります。これの主な要因には、一つとしてリアルな世界ではリアルな資源の開発ができる部分がたくさんあったことと、技術的な進歩が爆発的に増加したと思います。産業革命以後、人類はパンドラのボックスを開いたように、知の集合体として大きく成長し、もはや産業革命のときみたいに一種の技術進歩で大きく人類が前進するという状況ではなくなっています。</p><p>今現在だけでも、自分の認識している範囲ですと、5G、ブロックチェーン、AI、Iot など、様々な技術が雨後の筍のように現れてきて、同時に進化して融合しつつ、次の産業革命として人類社会を爆発的に前進させるでしょう。想像を絶するような世界がまた 10 年 20 年後には現れて人間社会のこれまでの知識、経験、哲学や価値観をすべて考え直さなければならないのかもしれません。今はこれだけ進化の速度が早くて、毎日が新たな歴史のページをめくっているようなものです。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="why-human-will-go-virtual">Why human will go virtual<a class="hash-link" href="#why-human-will-go-virtual" title="見出しへの直接リンク">​</a></h3><p>また、なぜバーチャルが良いのかという疑問もあろうかと思います。</p><p>昔マルクスの人口論でも有名ですが、人類の発展はいずれ現実世界の限界を迎えてしまい、減速してしまうでしょうという理論です。自分は人間社会の GDP はますます増加していくことは間違いないと思っています。なぜなら現実世界は制約がありますが、バーチャル空間は制約が少ないからです。</p><p>人間は大航海時代以来、影響範囲を拡大しようと、地球をたくさん探索し続け開発してきました。今や宇宙へ行こうとしています。ただ、宇宙開発はそう簡単にできるわけではありません。宇宙の開発を突破するには時間と空間というとてつもなく困難な壁がありました。そこで、この制限がかかっていないバーチャル空間の開発が容易なのではないかと普通は考えます。バーチャルな世界にいると、瞬間移動もできてスペースの問題も解決されます。</p><p>Web3 が来ると人類のバーチャル化が更に加速していきます。価値が容易にインターネット内でやり取りできるようになり、機械と機械がミドルマンなしで価値のやり取りができるようになります。少し予言しますが、将来はこの機械間の価値の交換がメインになるでしょう。いわゆるお金については、ますますプログラマブルマネー（コーディングで制御できるお金）になっていくわけです。</p><p>バーチャルな世界で生きている人間にとっては当然バーチャル世界ネイティブな資産が生まれてもおかしくないでしょう。それがクリプト（仮想通貨）です。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="why-people-cannot-understand-this-trend">Why people cannot understand this trend?<a class="hash-link" href="#why-people-cannot-understand-this-trend" title="見出しへの直接リンク">​</a></h2><p>この話はめちゃめちゃ重要で、なぜ気づいていない人々が多いのか？という疑問を抱くと思います。これについては、まあいろいろな理由があるでしょう。でもこれを知ってもらったあなたにはこのトレンドのことを覚えてほしいです。</p><p>技術というものは歴史において毎回何かを一新して、既得権益者の利益に触れます。そうすると必ず反発を受けます。</p><p>だけど、短期的には既得権益のほうが勝つかもしれませんが、長期的には勝てません。時代のトレンドというのは逆らうことがほぼ不可能なのです。</p><p>英語ではよく言われる言葉として以下があります。</p><blockquote><p>First they ignore you, then they laugh at you, then they fight you, then you win.</p></blockquote><p>これはクリプトの業界でもめちゃくちゃぴんとくる言葉です。「最初に彼らあなたを無視し、それからあざ笑わい、それから抗い、最終的にはあなたの勝利」というような感じで、歴史においては様々なトレンドがたどってきた運命なのです。</p><p>車の歴史もそうですし、発明された当初、めちゃくちゃ効率が悪くデザインも良くなかったので、馬車のほうが全然いいと思っていた人が少なからずいました。また、そのあとのインターネットも発明された当初は誰にも理解されず、ビル・ゲイツがテレビでインターネットを紹介していたときには観客と司会者の方から大いに笑われていました。今だから言えるのですが、当初のビル・ゲイツが想像した世界よりも遥かに進んだインターネット社会ができています。</p><blockquote><p>"History Doesn’t Repeat Itself, but It Often Rhymes" - Mark Twain</p></blockquote><p>Mark Twain 氏が言っている通りです。</p><p>そこで、今度はブロックチェーンの番です。「ディスられる、怒られる、軽蔑される、無視される、それでも進化し続けて社会を変えていき、我々の生き方も変えてくれる」、これがクリプトです。</p><p>だらだらと書いてしまいましたが、普段友人に聞かれて説明すると結構な時間をかけて説明できたりしますが、いざ書くとなるとうまく書けないんですね。まだ書ききれないほどありますので、また次回をお楽しみに！</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="免責事項"><em>免責事項</em><a class="hash-link" href="#免責事項" title="見出しへの直接リンク">​</a></h3><p><em>本 website にかかれている内容はあくまで個人的な見解であり、Financial advice ではありません。</em></p>]]></content>
        <author>
            <name>Thurendous</name>
            <uri>https://github.com/thurendous</uri>
        </author>
        <author>
            <name>Polymetis</name>
            <uri>https://github.com/PolymetisOutis</uri>
        </author>
        <category label="ブロックチェーン" term="ブロックチェーン"/>
        <category label="クリプト" term="クリプト"/>
        <category label="未来" term="未来"/>
        <category label="歴史" term="歴史"/>
        <category label="メタバース" term="メタバース"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[About Scaricity]]></title>
        <id>about-scaricity</id>
        <link href="https://omaeno.xyz/blog/about-scaricity"/>
        <updated>2022-09-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[あなたは、「希少性がある」「希少性が無い」ということを考えたことがありますか？]]></summary>
        <content type="html"><![CDATA[<p>あなたは、「希少性がある」「希少性が無い」ということを考えたことがありますか？</p><p>「希少性」とは何でしょう？</p><p>「希少性」は、欲求に対して量や数が極めて少ない、ある意味客観的事実です。</p><p>また、そのために生じる価値のことを「希少価値」といいます。</p><p>普段の生活においては我々は実は無意識のうちに価値の判断を毎日しています。「これは私にとって価値がある」、「それは価値がない」などと色々考えて行動をして、人間の一つ一つの小さな行動パターンが市場を決めているのです。しかし、我々の感覚的な価値の判断は実は少し立ち戻って考えると、多少ずれた感覚であり、あまりにも短視的に物事を見ていることがわかると思います。</p><p>今回は希少性の話をしたいと思います。結論をいきなり言ってしまうとすごく疑問に思うかもしれませんので、ゆっくり話を読んでもらえれば、私の主張が当たり前のように思えてくるでしょう。</p><p><img loading="lazy" src="/assets/images/moneything-7352cab02d8f7484eadfdd6e81e69a68.jpeg" width="5760" height="3840" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="希少性を考える">希少性を考える<a class="hash-link" href="#希少性を考える" title="見出しへの直接リンク">​</a></h2><p>世の中で何に希少性があるかということはよくよく考えてください。もちろん、代替できないものが一番希少性があるでしょう。その最たるものはあなたの命です。それは自分自身にとってはかけがえのない価値を持っているのは自明です。しかし、よく考えるとそれは赤の他人にとってどれくらいの価値があるのか？あまりないのかもしれませんし、結構ある場合もあるでしょう。</p><p>こういう主観によって価値が変わるものが世の中には存在します。例えば画家による絵画がそうです。ブロックチェーンの世界でいうと NFT に相当します。人によってはものすごい価値を持つし、価値がゼロの場合もあるでしょう。</p><p>しかし、今回議論したいのはこういう類のものではなく、普遍的に皆さんにとって価値があり、尚且つ交換しやすいものの希少性を考えてほしいのです。</p><p>まず言っておきたいことがあります。前提として、もしあなたが崇拝している資産があれば、その考えを捨ててほしいです。先入観なしで平等に客観的に判断をして初めて希少性について気付くことができると思います。</p><p>物事の値段というのは伝統的な経済の理論の中で需要と供給のバランスで決まるという前提があり、希少性と不可分です。希少価値があるか否かの判断基準としては、需要があまり減らず、供給もあまり増えないことだと考えています。希少価値があるものは高価格である、あるいは将来的に高価格になりうるものと言えます。</p><p>それでは、希少性のあるものについて一個ずつ考えましょう。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="japanese-yen">Japanese Yen<a class="hash-link" href="#japanese-yen" title="見出しへの直接リンク">​</a></h2><p><img loading="lazy" src="/assets/images/japanyen-4e814eff37ca0a2da30a5b512aaa15f9.jpg" width="400" height="300" class="img_ev3q"></p><p>価値というものについて考えた時に一番最初に思い浮かぶものは日本円でしょう。しかし、日本円は果たしてどれくらい希少性があるのか。</p><p>日本円は政府の信頼に基づいて発行されており、政府は信頼されてきちんと円の希少性を担保してくれると信じている方が少なくありませんが、実際には未だに日本円は続々と刷られて市場へ放出されています。これがいわゆる普段耳にする「金融緩和」という言葉です。シンプルにいうとお金を大量に刷っているのです。</p><p>こんなものに希少性があるのか甚だ疑問です。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="real-estate">Real Estate<a class="hash-link" href="#real-estate" title="見出しへの直接リンク">​</a></h2><p><img loading="lazy" src="/assets/images/realestate-4f0c03ce63001a7c94cc9192d4e83aa0.jpg" width="400" height="300" class="img_ev3q"></p><p>不動産というのは、大衆的に特に中国あるいは昔の日本のような急成長した国では神話のような資産として語られがちです。そういう国では、永遠に価値が上がるものとして見られてきました。何十年も事実として成り立っているものは神話となってしまいます。それもいずれ終焉を迎えるのです。</p><p>不動産を需要と供給のバランスの観点から話すと、決して希少性のある資産ではありません。なぜなら、まず需要は人口や景気に比例し、供給は不動産の開発規模に依存するからです。基本的に不動産開発の規模は、もし需要が増えれば増加させることで価格のバランスを取ることができます。</p><p>不動産開発の規模はある程度までは無限に増長できます。極端な話ですが、地球上に土地がなくなっても宇宙開発をする人間社会は、例えば火星へ引っ越しして不動産開発をすれば、供給は一気に増えるでしょう。ましてや現在の人間社会はリアル世界からバーチャル世界へ進んでいることから、不動産に代表されるリアル世界の経済規模というのは長期的に見ると、どこまでも無限に増長可能なバーチャル世界と比較して、伸びしろが縮小する傾向にあります。</p><p>少なくとも不動産にはあまり希少性がありません。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="stocks">Stocks<a class="hash-link" href="#stocks" title="見出しへの直接リンク">​</a></h2><p>株は会社が発行しているものです。いくらでも再発行や追加発行でき、しかも倒産のリスクもあります。当然ですが、あまり希少性はありません。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="gold">GOLD<a class="hash-link" href="#gold" title="見出しへの直接リンク">​</a></h2><p><img loading="lazy" src="/assets/images/gold1-91c55c374a0e6e01adaa3b2b4ef808d2.jpg" width="400" height="200" class="img_ev3q"></p><p>続いては歴史が長いゴールドについて話をします。</p><p>こういう貴金属には希少性があると思うでしょう。ゴールドは長い歴史の中で供給もあまり増えず、なかなかレアなものであり、お金として見られてきたので、たしかに希少性があるように思えてしまいます。</p><p>しかし、需要と供給の話をすると、需要は長い歴史の中で形成されてきたのであるのは間違いありません。ですが供給側でいうと、自然な鉱物だとすると、鉱山をいっぱい発見すれば供給がそれだけ増えてしまいます。</p><p>一方でもし需要がたくさんある場合、鉱山を見つけるためのインセンティブが働いてたくさん鉱山が見つかるでしょう。また、さらに宇宙進出をしている人間が宇宙でたくさんのゴールドを手に入れたら、ゴールドの希少性にまつわる神話も終わりを告げるでしょう。</p><p>一定条件のもとでは、ゴールドは希少性がありますが、長期的に考えるとあまり希少性はありません。</p><p>ゴールドでさえも希少性があまりないというなら、何に希少性があるんだよと思うかもしれないです。</p><p>ではここで重要な結論を話します。ブロックチェーンの元祖であるビットコインです。</p><p>ここでいうのは代表格の Bitcoin を言っていますが、別にその他のアルトコインに希少性が無いという意味ではないと理解してください。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="bitcoin">Bitcoin<a class="hash-link" href="#bitcoin" title="見出しへの直接リンク">​</a></h2><p><img loading="lazy" src="/assets/images/bitcoin-30a22abbc17faba946675ffd6fe63f22.jpg" width="400" height="300" class="img_ev3q"></p><p>ビットコインはハードキャップ(上限となる発行量)である 2100 万個という人類社会のコンセンサスがあることから、人工的に作ったあまり変えられない数の供給が成り立っています。これは１国家だろうがだれであろうが、このハードキャップに対するコンセンサスを動かすのは結構なハードルがあります。</p><p>また、需要面からいうと、ブロックチェーンのリテラシーが増加の一途をたどっており、今やWeb3は日本の国家戦略とかになったりしていて、そのインフラであることからますます多くの人々がブロックチェーンへの理解ができるようになるでしょう。また、人間社会がリアル世界からバーチャル世界へいくのは目に見えているし、現実世界の価値のアンカー(基礎)はゴールドだとすると、バーチャル世界の価値のアンカーはほぼビットコイン一択です。需要が増えることも間違いないでしょう。</p><p>したがって、筆者はこれまで色々見てきた普遍的な価値を持つものの中で、bitcoin のような人工的なものだけが長期に渡って絶対的な希少性が成立します。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ps">PS<a class="hash-link" href="#ps" title="見出しへの直接リンク">​</a></h2><p>正直、希少性のある普遍的なものというのはあまりありません。どんな物質であろうが頑張れば手に入るか、あるいは量を増やせると思います。今までのインターネットにおいてはデータはコピーできるというチート技を使えば希少性はありませんでした。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="免責事項"><em>免責事項</em><a class="hash-link" href="#免責事項" title="見出しへの直接リンク">​</a></h3><p><em>本 website にかかれている内容はあくまで個人的な見解であり、Financial advice ではありません。</em></p>]]></content>
        <author>
            <name>Thurendous</name>
            <uri>https://github.com/thurendous</uri>
        </author>
        <author>
            <name>Polymetis</name>
            <uri>https://github.com/PolymetisOutis</uri>
        </author>
        <category label="ブロックチェーン" term="ブロックチェーン"/>
        <category label="scaricity" term="scaricity"/>
        <category label="希少性" term="希少性"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Fundamental Knowledge]]></title>
        <id>fundamental-knowledge</id>
        <link href="https://omaeno.xyz/blog/fundamental-knowledge"/>
        <updated>2022-08-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Blockchain]]></summary>
        <content type="html"><![CDATA[<h1>What is Blockchain</h1><p>Blockchain</p>]]></content>
        <author>
            <name>Thurendous</name>
            <uri>https://github.com/thurendous</uri>
        </author>
        <author>
            <name>Polymetis</name>
            <uri>https://github.com/PolymetisOutis</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[About Knowledge]]></title>
        <id>about-why-I-write-about</id>
        <link href="https://omaeno.xyz/blog/about-why-I-write-about"/>
        <updated>2022-08-25T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Preface]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="preface">Preface<a class="hash-link" href="#preface" title="見出しへの直接リンク">​</a></h2><p>こんにちわ！Thurendous です。</p><p>そもそも本 Website を作ろうと思ったのは、自分は 2017 年からブロックチェーンに燃え始めてから、周りの方たちは興味を示すどころか、疑義の念を抱いている方が少なからずいたことがきっかけで、それから悶々となにかをやってやろうじゃないかと色々思いを抱いてきました。</p><p>今現在に至るまで、だいぶ時間が経ちましたし、色々な考えも成熟してきているかと思います。勉強も続けてきており、それが終わりのないマラソンのようですが、絶えず続けていく所存です。本 Website はブロックチェーン素人のあなたにとってのすべての疑問に答え、長年に渡って追ってきたブロックチェーン業界の観察者である自分自身がこの業界の将来に対するビジョンを共有できれば幸いだと考えております。</p><p>本ウェブサイトをきっかけに少しでもブロックチェーンの理解の促進、Web3 の理解、メタバースへの興味を持ち始めてもらえると嬉しいです。</p><p>ひいては熱狂的に興味を持ってもらえるような人が生まれてきて、Web3 業界にて起業したり社会を変革させたり、これまでの固定観念、常識を取り壊し、新たな歩み、富を創造して、人々を自由を与え、社会を開放していくとか、そういうことは願ってやみません！</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="big-trend">Big Trend<a class="hash-link" href="#big-trend" title="見出しへの直接リンク">​</a></h2><p>自分はもともと海外出身かつ理系出身ですが、文系も大好きでした。それが原因なのかわかりませんが、ブロックチェーンに出会ってからその考え方が理系でもできて文系でもできるところ、また深く考えれば考えるほど、楽しくなっていくことが大好きでした。</p><p>ブロックチェーンを考えるときに、投資の世界ですと、どうしても短期的に物事を価格的、あるいは投機的な視点で見がちですが、自分はどちらかというと、少し原点に立ち戻って大きな視点から見るのが好きです。</p><p>個人として行動を起こす上で、大きな方向として間違えなければ、何か方向性を疑うような事件が起きたとしても個人的には許容範囲なのかなって思ってます。ブロックチェーンに対して疑義の念を抱いてる人が結構いますが、大きなトレンドとして分析すると、色々明らかになることが多いように思います。</p><p>これから、大きなトレンドの話をいくつか記事に分けて書いていこうと考えています。こういった記事を読んでいただければ、ブロックチェーン業界を長年観察してきて、なぜブロックチェーンに熱狂的に自分はなったのか、なぜブロックチェーン業界はすごいのかといった質問に答えることができるのではないかと思います。</p><p>もちろん、ブロックチェーン業界に対して疑義の念をあなたは抱いているかもしれませんが、そこはゆっくり吟味していただいて、私は素人でありながらも、普通の人が考えたことのない、あるいは知ろうとしないことを長い年月と経験を経て多言語的に情報を収集し勉強してきて今に至っています。</p><p>ブロックチェーンについてはものすごい楽観視しているのはそれなりの理由や背景知識を頑張って手に入れたからです。根拠があって今の認識があるわけです。ゆっくりとご覧になって考えてみてほしいです。</p><p>一度に書くと書ききれないことですので、自分としてもゆっくり整理して複数の記事にして全部書いていきたいと考えています。何かお役に立ったのであれば幸いです！</p><h1>What to Write</h1><p>小難しいことを書くと多分理解されませんので、ある意味自分がブロックチェーンを理解してきた中で、実生活の事例とか、普段の感覚とかそういったものを使いつつ、直感的にわかってもらえるように内容を書いていければと思っています。というのも自分はそういった経緯をたどった経験がありましたので、そうしようと考えたのです。</p><ul><li><p>マクロな視点から見た blockchain</p><ul><li>歴史の話から、お金の話から、インターネットの歴史（バーチャルへ）<ul><li>software is eating the world</li></ul></li><li>技術の進歩についての現状</li><li>世界経済の規模<ul><li>仮想通貨は値上がりするの？</li></ul></li><li>将来の経済発展の割合</li><li>社会の変貌（非中央集権へ）</li></ul></li><li><p>Web3 ってなに</p></li><li><p>DeFi ってなに</p></li><li><p>スマートコントラクトってなに</p></li><li><p>仮想通貨は本質的な価値がないとよく言われるので大丈夫か</p></li><li><p>仮想通貨は投機ばかりですよね？</p></li><li><p>希少性の話</p></li><li><p>人間の本性</p></li><li><p>国境がない世界</p></li><li><p>blockchain の仕組み</p></li><li><p>人口分布の関係</p></li></ul>]]></content>
        <author>
            <name>Thurendous</name>
            <uri>https://github.com/thurendous</uri>
        </author>
        <author>
            <name>Polymetis</name>
            <uri>https://github.com/PolymetisOutis</uri>
        </author>
        <category label="ブロックチェーン" term="ブロックチェーン"/>
        <category label="about" term="about"/>
    </entry>
</feed>